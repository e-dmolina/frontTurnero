{"version":3,"sources":["context/turnos/turnoContext.js","context/autenticacion/authContext.js","config/axios.js","components/TableMaterial.js","components/Barra.js","components/Home.js","context/alertas/alertaContext.js","components/auth/NuevaCuenta.js","config/token.js","components/rutas/RutaPrivada.js","components/Turnero.js","context/alertas/alertaReducer.js","types/index.js","context/alertas/alertaState.js","context/autenticacion/authReducer.js","context/autenticacion/authState.js","context/turnos/turnoReducer.js","context/turnos/turnoState.js","components/auth/Login.js","App.js","index.js"],"names":["turnoContext","createContext","authContext","clienteAxios","axios","create","baseURL","StyledTableCell","withStyles","theme","head","backgroundColor","color","palette","common","white","body","fontSize","TableCell","StyledTableRow","root","background","default","TableRow","TableMaterial","titulos","turnosDisponibles","dateFormated","eliminarTurno","useContext","TurnoContext","usuario","AuthContext","buscarUsuario","t","a","get","cliente","respuesta","Swal","fire","title","data","nombre","html","email","telefono","icon","showConfirmButton","showCancelButton","then","resp","value","_id","TableContainer","component","Paper","Table","aria-label","TableHead","map","i","key","align","TableBody","td","scope","onClick","rol","text","fecha","hora","useStyles","makeStyles","flexGrow","menuButton","marginRight","spacing","Barra","classes","usuarioAutenticado","cerrarSesion","useEffect","className","AppBar","position","Toolbar","Typography","variant","Button","Home","props","turnos","obtenerTurnos","useState","disabled","setDisabled","length","setTimeout","history","push","Alert","severity","alertaContext","Copyright","to","Date","getFullYear","paper","marginTop","display","flexDirection","alignItems","avatar","margin","secondary","main","form","width","submit","NuevaLogin","AlertaContext","alerta","mostrarAlerta","registrarUsuario","mensaje","autenticado","msg","categoria","password","confirmar","setUsuario","onChange","e","target","name","Container","maxWidth","CssBaseline","Avatar","noValidate","onSubmit","preventDefault","trim","TextField","required","fullWidth","id","label","autoFocus","type","Box","mt","tokenAuth","token","defaults","headers","RutaPrivada","Component","cargando","render","Turnero","agregarTurno","obtenerHorasDisponibles","fechaCalendario","setFechaCalendario","moment","format","fechaSeleccionada","setfechaSeleccionada","date","day","console","log","style","utils","DateFnsUtils","locale","deLocale","minDate","maxDate","KeyboardButtonProps","turno","window","location","href","onClickTurno","state","action","payload","AlertaState","useReducer","alertaReducer","dispatch","Provider","children","localStorage","setItem","removeItem","AuthState","initialState","getItem","AuthReducer","datos","post","response","iniciarSesion","filter","horarioDeAtencion","indexOf","TurnoState","turnoReducer","aux","resultado","turnoId","delete","Login","autoComplete","App","path","exact","NuevaCuenta","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.7acec1be.chunk.js","sourcesContent":["import { createContext } from 'react'\n\nconst turnoContext = createContext()\n\nexport default turnoContext\n","import { createContext } from 'react'\n\nconst authContext = createContext()\n\nexport default authContext\n","import axios from 'axios'\n\nconst clienteAxios = axios.create({\n    baseURL: 'http://54.233.102.82:4000'\n})\n\nexport default clienteAxios","import React, { Fragment, useContext } from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Swal from 'sweetalert2';\nimport Paper from '@material-ui/core/Paper';\nimport TurnoContext from '../context/turnos/turnoContext'\nimport AuthContext from '../context/autenticacion/authContext'\nimport clienteAxios from '../config/axios'\n\nconst StyledTableCell = withStyles(theme => ({\n    head: {\n        backgroundColor: '#3f51b5',\n        color: theme.palette.common.white,\n    },\n    body: {\n        fontSize: 14,\n    },\n}))(TableCell);\n\nconst StyledTableRow = withStyles(theme => ({\n    root: {\n        '&:nth-of-type(odd)': {\n            backgroundColor: theme.palette.background.default,\n        },\n    },\n}))(TableRow);\n\n\nconst TableMaterial = ({ titulos, turnosDisponibles, dateFormated }) => {\n\n    const turnocontext = useContext(TurnoContext)\n    const { eliminarTurno } = turnocontext\n\n    // Extraer la información de autenticación\n    const authContext = useContext(AuthContext)\n    const { usuario } = authContext\n\n    const onClickTurno = t => {\n\n        if (usuario.rol === 'Admin') {\n            buscarUsuario(t)\n            return\n        }\n\n        Swal.fire({\n            title: 'Atención',\n            text: `Estas seguro de eliminar el turno para el día ${t.fecha} a las ${t.hora}?`,\n            icon: 'question',\n            showConfirmButton: true,\n            showCancelButton: true\n        }).then(resp => {\n            if (resp.value) {\n                eliminarTurno(t._id)\n            }\n        });\n    }\n\n    const buscarUsuario = async t => {\n        const respuesta = await clienteAxios.get(`/api/usuarios/${t.cliente}`)\n        Swal.fire({\n            title: `<h5>cliente: ${respuesta.data.nombre}</h5>`,\n            html: `<p>email: ${respuesta.data.email}</p><p><a href=\"https://wa.me/+54${respuesta.data.telefono}\">Telefono: ${respuesta.data.telefono}</a></p><p>Desea eliminar el turno?</p>`,\n            icon: 'question',\n            showConfirmButton: true,\n            showCancelButton: true\n        }).then(resp => {\n            if (resp.value) {\n                eliminarTurno(t._id)\n            }\n        });\n\n    }\n\n    return (\n        <Fragment>\n            <TableContainer component={Paper}>\n                <Table aria-label=\"customized table\">\n                    <TableHead>\n                        <TableRow>\n                            {\n                                titulos.map((t, i) => {\n                                    return <StyledTableCell\n                                        key={i}\n                                        align=\"center\"\n                                    >\n                                        {t} {dateFormated}\n                                    </StyledTableCell>\n                                })\n                            }\n                        </TableRow>\n                    </TableHead>\n                    <TableBody>\n                        {turnosDisponibles.map((td, i) => (\n                            <StyledTableRow key={i}>\n                                <StyledTableCell component=\"th\" scope=\"row\" align=\"center\" onClick={() => onClickTurno(td)}>\n                                    {td.hora} {td.fecha}\n                                </StyledTableCell>\n                            </StyledTableRow>\n                        ))}\n                    </TableBody>\n                </Table>\n            </TableContainer>\n        </Fragment>\n    );\n}\n\nexport default TableMaterial\n","import React, { useContext, useEffect } from 'react'\nimport AuthContext from '../context/autenticacion/authContext'\nimport { makeStyles } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        flexGrow: 1,\n    },\n    menuButton: {\n        marginRight: theme.spacing(2),\n    },\n    title: {\n        flexGrow: 1,\n    },\n}));\n\nconst Barra = () => {\n\n    const classes = useStyles();\n\n    // Extraer la información de autenticación\n    const authContext = useContext(AuthContext)\n    const { usuario, usuarioAutenticado, cerrarSesion } = authContext\n\n    useEffect(() => {\n        usuarioAutenticado()\n        // eslint-disable-next-line\n    }, [])\n\n    return (\n\n        <div className={classes.root}>\n            <AppBar position=\"static\">\n                <Toolbar>\n                    {/* validación para lo que tarde en ejecutarse el useEffect */}\n                    {\n                        usuario\n                        &&\n                        <Typography variant=\"h6\" className={classes.title}>\n                            Hola <span>{usuario.nombre}</span>\n                        </Typography>\n                    }\n\n\n                    <Button color=\"inherit\" onClick={() => cerrarSesion()}>Cerrar Sesión</Button>\n                </Toolbar>\n            </AppBar>\n        </div>\n\n        // <header className=\"app-header\">\n        //     {/* validación para lo que tarde en ejecutarse el useEffect */}\n        //     {\n        //         usuario\n        //         &&\n        //         <p className=\"nombre-usuario\">\n        //             Hola <span>{usuario.nombre}</span>\n        //         </p>\n        //     }\n\n        //     <nav className=\"nav-principal\">\n        //         <button\n        //             className=\"btn btn-blank cerrar-sesion\"\n        //             onClick={() => cerrarSesion()}\n        //         >\n        //             Cerrar sesión\n        //         </button>\n        //     </nav>\n        // </header>\n    )\n}\n\nexport default Barra\n","import React, { useState, useContext, useEffect } from 'react'\nimport TableMaterial from './TableMaterial'\nimport Button from '@material-ui/core/Button';\nimport Alert from '@material-ui/lab/Alert';\nimport Barra from './Barra';\nimport AuthContext from '../context/autenticacion/authContext'\nimport TurnoContext from '../context/turnos/turnoContext'\n\n\nconst Home = (props) => {\n\n\n    // Extraer la información de autenticación\n    const authContext = useContext(AuthContext)\n    const { usuarioAutenticado } = authContext\n\n    const turnoContext = useContext(TurnoContext)\n    const { turnos, obtenerTurnos } = turnoContext\n\n    // State\n    const [disabled, setDisabled] = useState(false)\n\n    useEffect(() => {\n        usuarioAutenticado()\n        obtenerTurnos()\n        // eslint-disable-next-line\n    }, [])\n\n    const onClick = () => {\n        if (turnos.length >= 2) {\n            setDisabled(true)\n            setTimeout(() => {\n                setDisabled(false)\n            }, 3000)\n        } else {\n            // window.location.href = '/turnero'\n            props.history.push('/turnero')\n        }\n    }\n\n    return (\n        <div className='mt-3'>\n\n            <Barra />\n\n            <TableMaterial\n                titulos={[\"Mis Turnos\"]}\n                turnosDisponibles={turnos}\n            />\n\n            <div className='mt-5 d-flex justify-content-center'>\n\n                    <Button variant=\"contained\" color=\"primary\" onClick={onClick} disabled={disabled}>\n                        {/* <Link style={{ color: 'white' }} to='/turnero'>Agregar Turno</Link> */}\n                            Agregar Turno\n                    </Button>\n            </div>\n            {\n                    disabled\n                    &&\n                    <div className='mt-5 d-flex justify-content-center'>\n                        <Alert severity=\"warning\">No puedes tener mas de dos turnos agendados</Alert>\n                    </div>\n                }\n        </div>\n    )\n}\n\nexport default Home\n","import { createContext } from 'react'\n\nconst alertaContext = createContext()\n\nexport default alertaContext\n","import React, { useState, useContext, useEffect } from 'react'\nimport { Link } from 'react-router-dom'\nimport AlertaContext from '../../context/alertas/alertaContext'\nimport AuthContext from '../../context/autenticacion/authContext'\nimport Avatar from '@material-ui/core/Avatar';\nimport Button from '@material-ui/core/Button';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport TextField from '@material-ui/core/TextField';\n// import FormControlLabel from '@material-ui/core/FormControlLabel';\n// import Checkbox from '@material-ui/core/Checkbox';\n// import Link from '@material-ui/core/Link';\n// import Grid from '@material-ui/core/Grid';\nimport Box from '@material-ui/core/Box';\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Container from '@material-ui/core/Container';\nimport Alert from '@material-ui/lab/Alert';\n\nfunction Copyright() {\n    return (\n        <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\n            {'Copyright © '}\n            <Link color=\"inherit\" to=\"https://material-ui.com/\">\n                DY\n      </Link>{' '}\n            {new Date().getFullYear()}\n            {'.'}\n        </Typography>\n    );\n}\n\nconst useStyles = makeStyles((theme) => ({\n    paper: {\n        marginTop: theme.spacing(8),\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n    },\n    avatar: {\n        margin: theme.spacing(1),\n        backgroundColor: theme.palette.secondary.main,\n    },\n    form: {\n        width: '100%', // Fix IE 11 issue.\n        marginTop: theme.spacing(1),\n    },\n    submit: {\n        margin: theme.spacing(3, 0, 2),\n    },\n}));\n\nexport default function NuevaLogin(props) {\n\n    // extraer los valores del context\n    const alertaContext = useContext(AlertaContext)\n    const { alerta, mostrarAlerta } = alertaContext\n\n    const authContext = useContext(AuthContext)\n    const { registrarUsuario, mensaje, autenticado } = authContext\n\n    // En caso de que  el usuario se haya autenticado, registrado o sea un registro duplicado\n    useEffect(() => {\n        if (autenticado) {\n            props.history.push('/home')\n        }\n\n        if (mensaje) {\n            mostrarAlerta(mensaje.msg, mensaje.categoria)\n        }\n        // eslint-disable-next-line\n    }, [mensaje, autenticado, props.history])\n\n    // State para iniciar sesion\n    const [usuario, setUsuario] = useState({\n        nombre: '',\n        rol: '',\n        email: '',\n        password: '',\n        telefono: '',\n        confirmar: ''\n    })\n\n    const { nombre, email, telefono, password, confirmar } = usuario\n\n    const onChange = e => {\n        setUsuario({\n            ...usuario,\n            [e.target.name]: e.target.value\n        })\n    }\n\n    const onSubmit = e => {\n        e.preventDefault()\n        // validar campos vacios\n        if (nombre.trim() === '' || email.trim() === '' || telefono.trim() === '' || password.trim() === '') {\n            mostrarAlerta('Todos los campos son obligatorios', 'alert-danger')\n            return\n        }\n        // validar 6 caracteres\n        if (password.length < 6) {\n            mostrarAlerta('El password debe tener minimo 6 caracteres', 'alert-danger')\n            return\n        }\n        // Validar igualdad de password\n        if (password !== confirmar) {\n            mostrarAlerta('Los password no son iguales', 'alert-danger')\n            return\n        }\n        // Pasarlo al action\n        registrarUsuario({\n            nombre,\n            email,\n            password,\n            telefono\n        })\n    }\n\n    const classes = useStyles();\n\n    return (\n        <Container component=\"main\" maxWidth=\"xs\">\n            <CssBaseline />\n            <div className={classes.paper}>\n                <Avatar className={classes.avatar}>\n                    <LockOutlinedIcon />\n                </Avatar>\n                <Typography component=\"h1\" variant=\"h5\">\n                    Crear Nueva Cuenta\n        </Typography>\n                <form className={classes.form} noValidate onSubmit={onSubmit}>\n                    <TextField\n                        variant=\"outlined\"\n                        margin=\"normal\"\n                        required\n                        fullWidth\n                        id=\"nombre\"\n                        label=\"Nombre\"\n                        name=\"nombre\"\n                        autoFocus\n                        value={nombre}\n                        onChange={onChange}\n                    />\n                    <TextField\n                        variant=\"outlined\"\n                        margin=\"normal\"\n                        required\n                        fullWidth\n                        id=\"telefono\"\n                        label=\"Telefono\"\n                        name=\"telefono\"\n                        value={telefono}\n                        onChange={onChange}\n                    />\n                    <TextField\n                        variant=\"outlined\"\n                        margin=\"normal\"\n                        required\n                        fullWidth\n                        id=\"email\"\n                        label=\"Email\"\n                        name=\"email\"\n                        value={email}\n                        onChange={onChange}\n                    />\n                    <TextField\n                        variant=\"outlined\"\n                        margin=\"normal\"\n                        required\n                        fullWidth\n                        name=\"password\"\n                        label=\"Password\"\n                        type=\"password\"\n                        id=\"password\"\n                        value={password}\n                        onChange={onChange}\n                    />\n                    <TextField\n                        variant=\"outlined\"\n                        margin=\"normal\"\n                        required\n                        fullWidth\n                        name=\"confirmar\"\n                        label=\"confirmar\"\n                        type=\"password\"\n                        id=\"confirmar\"\n                        value={confirmar}\n                        onChange={onChange}\n                    />\n                    {/* <FormControlLabel\n                        control={<Checkbox value=\"remember\" color=\"primary\" />}\n                        label=\"Remember me\"\n                    /> */}\n                    <Button\n                        type=\"submit\"\n                        fullWidth\n                        variant=\"contained\"\n                        color=\"primary\"\n                        className={classes.submit}\n                    >\n                        Crear Sesión\n                    </Button>\n                    {/* <Grid container>\n                        <Grid item xs>\n                            <Link href=\"#\" variant=\"body2\">\n                                Forgot password?\n              </Link>\n                        </Grid>\n                        <Grid item>\n                            <Link href=\"#\" variant=\"body2\">\n                                {\"Don't have an account? Sign Up\"}\n                            </Link>\n                        </Grid>\n                    </Grid> */}\n                </form>\n                <Link to='/' >\n                    Volver\n                </Link>\n                {alerta && <Alert severity='error'>{alerta.msg}</Alert>}\n            </div>\n            <Box mt={8}>\n                <Copyright />\n            </Box>\n        </Container>\n    );\n}","import clienteAxios from './axios'\n\nconst tokenAuth = token => {\n    if (token) {\n        clienteAxios.defaults.headers.common['x-auth-token'] = token\n    } else {\n        delete clienteAxios.defaults.headers.common['x-auth-token']\n    }\n}\n\nexport default tokenAuth","import React, { useContext, useEffect } from 'react'\nimport { Route, Redirect } from 'react-router-dom'\nimport AuthContext from '../../context/autenticacion/authContext'\n\nconst RutaPrivada = ({ component: Component, ...props }) => {\n\n    const authContext = useContext(AuthContext)\n    const { autenticado, usuarioAutenticado, cargando } = authContext\n\n    useEffect(() => {\n        usuarioAutenticado()\n        // eslint-disable-next-line\n    }, [])\n\n    return (\n        <Route {...props} render={props => !autenticado && !cargando ? (\n            <Redirect to='/' />\n        )\n            :\n            (\n                <Component {...props} />\n            )\n    }\n        />\n    )\n}\n\nexport default RutaPrivada","import React, { useState, useEffect, useContext } from 'react'\nimport { KeyboardDatePicker, MuiPickersUtilsProvider } from '@material-ui/pickers'\nimport DateFnsUtils from '@date-io/date-fns'\nimport deLocale from \"date-fns/locale/es\";\nimport moment from 'moment'\nimport { TableContainer, Paper, Table, TableCell, withStyles, TableRow, TableHead, TableBody, Button } from '@material-ui/core';\nimport Swal from 'sweetalert2';\nimport TurnoContext from '../context/turnos/turnoContext'\nimport { Link } from 'react-router-dom';\n\n\nconst Turnero = () => {\n\n    const StyledTableCell = withStyles(theme => ({\n        head: {\n            backgroundColor: '#3f51b5',\n            color: theme.palette.common.white,\n        },\n        body: {\n            fontSize: 14,\n        },\n    }))(TableCell);\n\n    const StyledTableRow = withStyles(theme => ({\n        root: {\n            '&:nth-of-type(odd)': {\n                backgroundColor: theme.palette.background.default,\n            },\n        },\n    }))(TableRow);\n\n    // Obtener el state del context\n    const turnoContext = useContext(TurnoContext)\n    const { agregarTurno, obtenerHorasDisponibles, turnosDisponibles } = turnoContext\n\n    // State\n    const [fechaCalendario, setFechaCalendario] = useState(new Date())\n    const [fechaSeleccionada, setfechaSeleccionada] = useState(moment(new Date()).format('DD-MM-YYYY'))\n    // const [turno, setTurno] = useState({\n    //     cliente: '',\n    //     nombreCliente: '',\n    //     fecha: '',\n    //     hora: '',\n    //     estado: '',\n    //     creado: ''\n    // })\n\n    useEffect(() => {\n        // TODO: traer turnos para el dia (horario de atencion)\n        //       traer turnos ocupados\n        obtenerHorasDisponibles(fechaSeleccionada)\n        // eslint-disable-next-line\n    }, [fechaCalendario])\n\n\n    const onChange = async date => {\n\n        if (moment(date).day() === 0) {\n            console.log('este es el date ', moment(date).day())\n            return\n        }\n        let dateFormated = moment(date).format('DD-MM-YYYY')\n        setfechaSeleccionada(dateFormated)\n        setFechaCalendario(date)\n        // Hace una consulta para traer los turnos ocupados en la fecha seleccionada\n        // para ello cuando cambia fechaCalendario se ejecuta obtenerOcupados() en el useEffect\n    }\n\n    const onClickTurno = hora => {\n        const turno = { fecha: fechaSeleccionada, hora: hora }\n\n        Swal.fire({\n            title: 'Atención',\n            text: `Vas a agendar un turno para el día ${turno.fecha} a las ${turno.hora}`,\n            icon: 'question',\n            showConfirmButton: true,\n            showCancelButton: true\n        }).then(resp => {\n            if (resp.value) {\n                agregarTurno(turno)\n                window.location.href = '/home'\n            }\n        });\n    }\n\n    return (\n        <div className=\"container\">\n\n            <h1 style={{ color: 'black' }} align=\"center\">Turnero</h1>\n\n            <div className='mb-3' align=\"center\" style={{ backgroundColor: 'white' }}>\n                <MuiPickersUtilsProvider utils={DateFnsUtils} locale={deLocale}>\n                    <KeyboardDatePicker\n                        margin=\"normal\"\n                        id=\"date-picker-dialog\"\n                        label=\"Fecha de Turno\"\n                        format=\"dd/MM/yyyy\"\n                        value={fechaCalendario}\n                        minDate={moment(new Date()).format('YYYY/MM/DD')}\n                        maxDate={moment().day(14)}\n                        onChange={onChange}\n                        KeyboardButtonProps={{\n                            'aria-label': 'change date',\n                        }}\n                    />\n                </MuiPickersUtilsProvider>\n            </div>\n\n            {\n                turnosDisponibles.length === 0\n                    ?\n                    <div className=\"alert alert-danger\">\n                        <h5>No quedan tunos disponibles para el dia  {fechaSeleccionada}</h5>\n                    </div>\n                    :\n                    <div>\n                        <TableContainer component={Paper}>\n                            <Table aria-label=\"customized table\">\n                                <TableHead>\n                                    <TableRow>\n                                        <StyledTableCell\n                                            align=\"center\"\n                                        >\n                                            Turnos Disponibles para el dia {fechaSeleccionada}\n                                        </StyledTableCell>\n                                    </TableRow>\n                                </TableHead>\n                                <TableBody>\n                                    {turnosDisponibles.map((td, i) => (\n                                        <StyledTableRow key={i}>\n                                            <StyledTableCell component=\"th\" scope=\"row\" align=\"center\" onClick={() => onClickTurno(td)}>\n                                                {td}\n                                            </StyledTableCell>\n                                        </StyledTableRow>\n                                    ))}\n                                </TableBody>\n                            </Table>\n                        </TableContainer>\n                    </div>\n\n            }\n            <div className='mt-5 d-flex justify-content-center'>\n                <Button variant=\"contained\" color=\"primary\">\n                    <Link style={{ color: 'white' }} to='/home'>Volver</Link>\n                </Button>\n            </div>\n        </div>\n    )\n}\n\nexport default Turnero\n","import { MOSTRAR_ALERTA, OCULTAR_ALERTA } from '../../types'\n\nexport default (state, action) => {\n    switch (action.type) {\n        case MOSTRAR_ALERTA:\n            return {\n                alerta: action.payload\n            }\n        case OCULTAR_ALERTA:\n            return {\n                alerta: null\n            }\n        default:\n            return state\n    }\n}","export const MOSTRAR_ALERTA = 'MOSTRAR_ALERTA'\nexport const OCULTAR_ALERTA = 'OCULTAR_ALERTA'\n\nexport const REGISTRO_EXITOSO = 'REGISTRO_EXITOSO'\nexport const REGISTRO_ERROR = 'REGISTRO_ERROR'\nexport const OBTENER_USUARIO = 'OBTENER_USUARIO'\nexport const LOGIN_EXITOSO = 'LOGIN_EXITOSO'\nexport const LOGIN_ERROR = 'LOGIN_ERROR'\nexport const CERRAR_SESION = 'CERRAR_SESION'\n\nexport const OBTENER_TURNOS = 'OBTENER_TURNOS'\nexport const AGREGAR_TURNO = 'AGREGAR_TURNO'\nexport const ELIMINAR_TURNO = 'ELIMINAR_TURNO'\nexport const OBTENER_TURNOS_X_FECHA = 'OBTENER_TURNOS_X_FECHA'\n","import React, { useReducer } from 'react'\nimport alertaContext from './alertaContext'\nimport alertaReducer from './alertaReducer'\nimport { MOSTRAR_ALERTA, OCULTAR_ALERTA } from '../../types'\n\nconst AlertaState = props => {\n    const initialState = {\n        alerta: null\n    }\n\n    const [state, dispatch] =useReducer(alertaReducer, initialState)\n\n    const mostrarAlerta = (msg, categoria) => {\n        dispatch({\n            type: MOSTRAR_ALERTA,\n            payload: {\n                msg,\n                categoria\n            }\n        })\n\n        setTimeout(() => {\n            dispatch({\n                type: OCULTAR_ALERTA\n            })\n        }, 5000)\n    }\n\n    return (\n        <alertaContext.Provider\n            value={{\n                alerta:state.alerta,\n                mostrarAlerta\n            }}\n        >\n            {props.children}\n        </alertaContext.Provider>\n    )\n\n}\n\nexport default AlertaState","import {\n    REGISTRO_EXITOSO,\n    REGISTRO_ERROR,\n    OBTENER_USUARIO,\n    LOGIN_EXITOSO,\n    LOGIN_ERROR,\n    CERRAR_SESION\n} from '../../types'\n\nexport default (state, action) => {\n    switch (action.type) {\n        case REGISTRO_EXITOSO:\n            localStorage.setItem('token', action.payload.token)\n            return {\n                ...state,\n                autenticado: true,\n                mensaje: null\n            }\n        case LOGIN_EXITOSO:\n            localStorage.setItem('token', action.payload.token)\n            return {\n                ...state,\n                token: action.payload.token,\n                autenticado: true,\n                mensaje: null,\n                cargando: false\n            }\n        case OBTENER_USUARIO:\n            return {\n                ...state,\n                autenticado: true,\n                usuario: action.payload,\n                cargando: false\n            }\n        case REGISTRO_ERROR:\n        case LOGIN_ERROR:\n        case CERRAR_SESION:\n            localStorage.removeItem('token')\n            return {\n                ...state,\n                token: null,\n                mensaje: action.payload,\n                autenticado: null,\n                usuario: null,\n                cargando: false\n            }\n        default:\n            return state\n    }\n}","import React, { useReducer } from 'react'\nimport clienteAxios from '../../config/axios'\nimport AuthContext from './authContext'\nimport AuthReducer from './authReducer'\nimport tokenAuth from '../../config/token'\nimport {\n    REGISTRO_EXITOSO,\n    REGISTRO_ERROR,\n    OBTENER_USUARIO,\n    LOGIN_EXITOSO,\n    LOGIN_ERROR,\n    CERRAR_SESION\n} from '../../types'\n\nconst AuthState = props => {\n    const initialState = {\n        token: localStorage.getItem('token'),\n        autenticado: null,\n        usuario: null,\n        mensaje: null,\n        cargando: true\n    }\n\n    const [state, dispatch] = useReducer(AuthReducer, initialState)\n\n    // Las funciones\n    const registrarUsuario = async datos => {\n        try {\n            const respuesta = await clienteAxios.post('/api/usuarios', datos)\n            console.log(respuesta.data)\n            dispatch({\n                type: REGISTRO_EXITOSO,\n                payload: respuesta.data\n            })\n            // Obtener el usuario\n            usuarioAutenticado()\n        } catch (error) {\n            // console.log(error.response.data.msg)\n            const alerta = {\n                msg: error.response.data.msg,\n                categoria: 'alert-danger'\n            }\n            dispatch({\n                type: REGISTRO_ERROR,\n                payload: alerta\n            })\n        }\n    }\n\n    // Retorna el usuario autenticado\n    const usuarioAutenticado = async () => {\n        const token = localStorage.getItem('token')\n        // funcion para enviar el token por header\n        if (token) {\n            tokenAuth(token)\n        }\n\n        try {\n            const respuesta = await clienteAxios.get('/api/auth')\n            dispatch({\n                type: OBTENER_USUARIO,\n                payload: respuesta.data\n            })\n        } catch (error) {\n            // console.log(error.response.data.msg)\n            dispatch({\n                type: LOGIN_ERROR\n            })\n        }\n    }\n\n    // Cuando el usuario inicia sesión\n    const iniciarSesion = async datos => {\n        try {\n            const respuesta = await clienteAxios.post('/api/auth', datos)\n            console.log(respuesta.data)\n            dispatch({\n                type: LOGIN_EXITOSO,\n                payload: respuesta.data\n            })\n            // Obtener el usuario\n            usuarioAutenticado()\n        } catch (error) {\n            console.log(error.response.data.msg)\n            const alerta = {\n                msg: error.response.data.msg,\n                categoria: 'alert-danger'\n            }\n            dispatch({\n                type: LOGIN_ERROR,\n                payload: alerta\n            })\n        }\n    }\n\n    // Cierra la sesión del usuario\n    const cerrarSesion = () => {\n        dispatch({\n            type: CERRAR_SESION\n        })\n    }\n\n    return (\n        <AuthContext.Provider\n            value={{\n                token: state.token,\n                autenticado: state.autenticado,\n                usuario: state.usuario,\n                mensaje: state.mensaje,\n                cargando: state.cargando,\n                registrarUsuario,\n                iniciarSesion,\n                usuarioAutenticado,\n                cerrarSesion\n            }}\n        >\n            {props.children}\n        </AuthContext.Provider>\n    )\n}\n\nexport default AuthState","import { OBTENER_TURNOS, AGREGAR_TURNO, ELIMINAR_TURNO, OBTENER_TURNOS_X_FECHA } from '../../types'\n\nexport default (state, action) => {\n    switch (action.type) {\n        case OBTENER_TURNOS:\n            return {\n                ...state,\n                turnos: action.payload\n            }\n        case AGREGAR_TURNO:\n            return {\n                ...state,\n                turnos: [...state, action.payload]\n            }\n        case ELIMINAR_TURNO:\n            return {\n                ...state,\n                turnos: state.turnos.filter( turno => turno._id !== action.payload)\n            }\n        case OBTENER_TURNOS_X_FECHA:\n            return {\n                ...state,\n                turnosDisponibles: state.horarioDeAtencion.filter(t => action.payload.indexOf(t) === -1)\n            }\n        default:\n            return state\n    }\n}","import React, { useReducer } from 'react'\nimport turnoContext from './turnoContext'\nimport turnoReducer from './turnoReducer'\nimport { OBTENER_TURNOS, AGREGAR_TURNO, ELIMINAR_TURNO, OBTENER_TURNOS_X_FECHA } from '../../types'\nimport clienteAxios from '../../config/axios'\n\nconst TurnoState = props => {\n\n    const initialState = {\n        turnos: [],\n        turnosDisponibles: [],\n        horarioDeAtencion: ['18:00', '18:30', '19:00', '19:30', '20:00']\n    }\n\n    // Dispatch para ejecutar las acciones\n    const [state, dispatch] = useReducer(turnoReducer, initialState)\n\n    // Funciones para el CRUD de Turnos\n    // getMisTurnos\n    const obtenerTurnos = async () => {\n        try {\n            const response = await clienteAxios.get('/api/turnos')\n            dispatch({\n                type: OBTENER_TURNOS,\n                payload: response.data\n            })\n        } catch (error) {\n            console.log(error)\n        }\n    }\n\n    // Obtener horasDisponibles por fecha\n    const obtenerHorasDisponibles = async fecha => {\n        try {\n            // Trae las horas ocupadas de la fecha\n            const respuesta = await clienteAxios.get(`api/turnos/fecha/${fecha}`)\n            const aux = []\n            await respuesta.data.map(t => aux.push(t.hora))\n            dispatch({\n                type: OBTENER_TURNOS_X_FECHA,\n                payload: aux\n            })\n        } catch (error) {\n            console.log(error)\n        }\n    }\n\n    // Agregar Turno\n    const agregarTurno = async turno => {\n        try {\n            const resultado = await clienteAxios.post('/api/turnos', turno)\n            // Insertar el turno en el state\n            dispatch({\n                type: AGREGAR_TURNO,\n                payload: resultado.data\n            })\n        } catch (error) {\n            console.log(error)\n        }\n    }\n\n    // Eliminar un Turno\n    const eliminarTurno = async turnoId => {\n        try {\n            await clienteAxios.delete(`/api/turnos/${turnoId}`)\n            dispatch({\n                type: ELIMINAR_TURNO,\n                payload: turnoId\n            })\n        } catch (error) {\n            console.log(error)\n        }\n    }\n\n    return (\n        <turnoContext.Provider\n            value={{\n                turnos: state.turnos,\n                horarioDeAtencion: state.horarioDeAtencion,\n                turnosDisponibles: state.turnosDisponibles,\n                obtenerTurnos,\n                agregarTurno,\n                eliminarTurno,\n                obtenerHorasDisponibles\n            }}\n        >\n            {props.children}\n        </turnoContext.Provider>\n    )\n}\n\nexport default TurnoState","import React, { useState, useContext, useEffect } from 'react'\nimport { Link } from 'react-router-dom'\nimport AlertaContext from '../../context/alertas/alertaContext'\nimport AuthContext from '../../context/autenticacion/authContext'\nimport Avatar from '@material-ui/core/Avatar';\nimport Button from '@material-ui/core/Button';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport TextField from '@material-ui/core/TextField';\n// import FormControlLabel from '@material-ui/core/FormControlLabel';\n// import Checkbox from '@material-ui/core/Checkbox';\n// import Link from '@material-ui/core/Link';\n// import Grid from '@material-ui/core/Grid';\nimport Box from '@material-ui/core/Box';\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Container from '@material-ui/core/Container';\nimport Alert from '@material-ui/lab/Alert';\n\nfunction Copyright() {\n    return (\n        <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\n            {'Copyright © '}\n            <Link color=\"inherit\" to=\"https://material-ui.com/\">\n                DY\n      </Link>{' '}\n            {new Date().getFullYear()}\n            {'.'}\n        </Typography>\n    );\n}\n\nconst useStyles = makeStyles((theme) => ({\n    paper: {\n        marginTop: theme.spacing(8),\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n    },\n    avatar: {\n        margin: theme.spacing(1),\n        backgroundColor: theme.palette.secondary.main,\n    },\n    form: {\n        width: '100%', // Fix IE 11 issue.\n        marginTop: theme.spacing(1),\n    },\n    submit: {\n        margin: theme.spacing(3, 0, 2),\n    },\n}));\n\nexport default function Login(props) {\n\n    // extraer los valores del context\n    const alertaContext = useContext(AlertaContext)\n    const { alerta, mostrarAlerta } = alertaContext\n\n    const authContext = useContext(AuthContext)\n    const { mensaje, autenticado, iniciarSesion } = authContext\n\n    // En caso de que  el usuario no exista o el password sea incorrecto\n    useEffect(() => {\n        if (autenticado) {\n            props.history.push('/home')\n        }\n\n        if (mensaje) {\n            mostrarAlerta(mensaje.msg, mensaje.categoria)\n        }\n        // eslint-disable-next-line\n    }, [mensaje, autenticado, props.history])\n\n    const [usuario, setUsuario] = useState({\n        email: '',\n        password: ''\n    })\n\n    const { email, password } = usuario\n\n    const onChange = e => {\n        setUsuario({\n            ...usuario,\n            [e.target.name]: e.target.value\n        })\n    }\n\n    const onSubmit = e => {\n        e.preventDefault()\n        // validar campos vacios\n        if (email.trim() === '' || password.trim() === '') {\n            mostrarAlerta('Todos los campos son obligatorios', 'alert-danger')\n        }\n\n        // Pasarlo al action\n        iniciarSesion({ email, password })\n    }\n\n    const classes = useStyles();\n\n    return (\n        <Container component=\"main\" maxWidth=\"xs\">\n            <CssBaseline />\n            <div className={classes.paper}>\n                <Avatar className={classes.avatar}>\n                    <LockOutlinedIcon />\n                </Avatar>\n                <Typography component=\"h1\" variant=\"h5\">\n                    Sign in\n        </Typography>\n                <form className={classes.form} noValidate onSubmit={onSubmit}>\n                    <TextField\n                        variant=\"outlined\"\n                        margin=\"normal\"\n                        required\n                        fullWidth\n                        id=\"email\"\n                        label=\"Email\"\n                        name=\"email\"\n                        autoComplete=\"email\"\n                        autoFocus\n                        value={email}\n                        onChange={onChange}\n                    />\n                    <TextField\n                        variant=\"outlined\"\n                        margin=\"normal\"\n                        required\n                        fullWidth\n                        name=\"password\"\n                        label=\"Password\"\n                        type=\"password\"\n                        id=\"password\"\n                        autoComplete=\"current-password\"\n                        value={password}\n                        onChange={onChange}\n                    />\n                    {/* <FormControlLabel\n                        control={<Checkbox value=\"remember\" color=\"primary\" />}\n                        label=\"Remember me\"\n                    /> */}\n                    <Button\n                        type=\"submit\"\n                        fullWidth\n                        variant=\"contained\"\n                        color=\"primary\"\n                        className={classes.submit}\n                    >\n                        Sign In\n          </Button>\n                    {/* <Grid container>\n                        <Grid item xs>\n                            <Link href=\"#\" variant=\"body2\">\n                                Forgot password?\n              </Link>\n                        </Grid>\n                        <Grid item>\n                            <Link href=\"#\" variant=\"body2\">\n                                {\"Don't have an account? Sign Up\"}\n                            </Link>\n                        </Grid>\n                    </Grid> */}\n                </form>\n                <Link to='/nueva-cuenta' >\n                    Crear Cuenta\n                </Link>\n                {alerta && <Alert severity='error'>{alerta.msg}</Alert>}\n            </div>\n            <Box mt={8}>\n                <Copyright />\n            </Box>\n        </Container>\n    );\n}","import React, { Component } from 'react';\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\n// import './App.css';\nimport Home from './components/Home'\nimport NuevaCuenta from './components/auth/NuevaCuenta';\nimport tokenAuth from './config/token'\nimport RutaPrivada from './components/rutas/RutaPrivada'\nimport Turnero from './components/Turnero';\nimport AlertaState from './context/alertas/alertaState'\nimport AuthState from './context/autenticacion/authState'\nimport TurnoState from './context/turnos/turnoState'\nimport Login from './components/auth/Login'\n\n// Revisar si tenemos un token\nconst token = localStorage.getItem('token')\n\nif (token) {\n  tokenAuth(token)\n}\n\nclass App extends Component {\n\n  render() {\n    return (\n      <AlertaState>\n        <AuthState>\n          <TurnoState>\n            <Router>\n              <Switch>\n                <Route path='/' exact component={Login} />\n                <Route path='/nueva-cuenta' exact component={NuevaCuenta} />\n                <RutaPrivada path='/home' exact component={Home} />\n                <RutaPrivada path='/turnero' exact component={Turnero} />\n              </Switch>\n            </Router>\n          </TurnoState>\n        </AuthState>\n      </AlertaState>\n    );\n  }\n\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n// import './index.css';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}