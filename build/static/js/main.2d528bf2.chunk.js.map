{"version":3,"sources":["img/coliseochico.jpeg","img/coliseo.png","context/turnos/turnoContext.js","context/autenticacion/authContext.js","config/axios.js","components/TableMaterial.js","components/Barra.js","components/Home.js","context/alertas/alertaContext.js","components/auth/NuevaCuenta.js","config/token.js","components/rutas/RutaPrivada.js","components/Turnero.js","context/alertas/alertaReducer.js","types/index.js","context/alertas/alertaState.js","context/autenticacion/authReducer.js","context/autenticacion/authState.js","context/turnos/turnoReducer.js","context/turnos/turnoState.js","components/auth/Login.js","App.js","index.js"],"names":["module","exports","turnoContext","createContext","authContext","clienteAxios","axios","create","baseURL","StyledTableCell","withStyles","theme","head","backgroundColor","color","palette","common","white","body","fontSize","TableCell","StyledTableRow","root","background","default","TableRow","TableMaterial","titulos","turnosDisponibles","dateFormated","eliminarTurno","useContext","TurnoContext","usuario","AuthContext","buscarUsuario","t","a","get","cliente","respuesta","Swal","fire","title","data","nombre","html","email","telefono","icon","showConfirmButton","showCancelButton","confirmButtonText","cancelButtonText","then","resp","value","_id","TableContainer","component","Paper","Table","aria-label","TableHead","map","i","key","align","TableBody","length","td","scope","onClick","rol","text","fecha","hora","className","Alert","severity","useStyles","makeStyles","flexGrow","menuButton","marginRight","spacing","Barra","classes","usuarioAutenticado","cerrarSesion","useEffect","AppBar","position","Toolbar","Typography","variant","Button","Home","props","turnos","obtenerTurnos","turnosParaHoy","turnosResto","useState","disabled","setDisabled","setTimeout","history","push","alertaContext","Copyright","to","Date","getFullYear","paper","marginTop","display","flexDirection","alignItems","avatar","margin","secondary","main","form","width","submit","NuevaLogin","AlertaContext","alerta","mostrarAlerta","registrarUsuario","mensaje","autenticado","msg","categoria","password","confirmar","setUsuario","onChange","e","target","name","Container","maxWidth","CssBaseline","Avatar","noValidate","onSubmit","preventDefault","trim","TextField","required","fullWidth","id","label","autoFocus","type","Box","mt","tokenAuth","token","defaults","headers","RutaPrivada","Component","cargando","render","Turnero","agregarTurno","obtenerHorasDisponibles","cambiarHorarioAtencion","cargandoTurnos","fechaCalendario","setFechaCalendario","moment","format","fechaSeleccionada","setfechaSeleccionada","day","useHistory","date","style","utils","DateFnsUtils","locale","deLocale","minDate","maxDate","KeyboardButtonProps","split","getHours","console","log","turno","onClickTurno","state","action","payload","AlertaState","useReducer","alertaReducer","dispatch","Provider","children","localStorage","setItem","removeItem","AuthState","initialState","getItem","AuthReducer","datos","post","response","iniciarSesion","filter","tp","tr","horarioDeAtencion","indexOf","TurnoState","turnoReducer","aux","resultado","turnoId","delete","dia","error","Login","src","coliseo","alt","autoComplete","App","path","exact","NuevaCuenta","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.2d528bf2.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/coliseochico.b5b19a31.jpeg\";","module.exports = __webpack_public_path__ + \"static/media/coliseo.8e4f274e.png\";","import { createContext } from 'react'\n\nconst turnoContext = createContext()\n\nexport default turnoContext\n","import { createContext } from 'react'\n\nconst authContext = createContext()\n\nexport default authContext\n","import axios from 'axios'\n\nconst clienteAxios = axios.create({\n    baseURL: 'http://18.230.188.15:4000'\n})\n\nexport default clienteAxios","import React, { Fragment, useContext } from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Swal from 'sweetalert2';\nimport Paper from '@material-ui/core/Paper';\nimport TurnoContext from '../context/turnos/turnoContext'\nimport AuthContext from '../context/autenticacion/authContext'\nimport clienteAxios from '../config/axios'\nimport Alert from '@material-ui/lab/Alert';\n\nconst StyledTableCell = withStyles(theme => ({\n    head: {\n        backgroundColor: '#3f51b5',\n        color: theme.palette.common.white,\n    },\n    body: {\n        fontSize: 14,\n    },\n}))(TableCell);\n\nconst StyledTableRow = withStyles(theme => ({\n    root: {\n        '&:nth-of-type(odd)': {\n            backgroundColor: theme.palette.background.default,\n        },\n    },\n}))(TableRow);\n\n\nconst TableMaterial = ({ titulos, turnosDisponibles, dateFormated }) => {\n\n    const turnocontext = useContext(TurnoContext)\n    const { eliminarTurno } = turnocontext\n\n    // Extraer la información de autenticación\n    const authContext = useContext(AuthContext)\n    const { usuario } = authContext\n\n    const onClickTurno = t => {\n\n        if (usuario.rol === 'Admin') {\n            buscarUsuario(t)\n            return\n        }\n\n        Swal.fire({\n            title: 'Atención',\n            text: `Estas seguro de eliminar el turno para el día ${t.fecha} a las ${t.hora} hs?`,\n            icon: 'question',\n            showConfirmButton: true,\n            showCancelButton: true,\n            confirmButtonText: 'Eliminar',\n            cancelButtonText: 'Cancelar'\n        }).then(resp => {\n            if (resp.value) {\n                eliminarTurno(t._id)\n            }\n        });\n    }\n\n    const buscarUsuario = async t => {\n        const respuesta = await clienteAxios.get(`/api/usuarios/${t.cliente}`)\n        Swal.fire({\n            title: `<h5>Cliente: ${respuesta.data.nombre}</h5>`,\n            html: `<p>Email: ${respuesta.data.email}</p><p><a href=\"https://wa.me/+54${respuesta.data.telefono}\">Telefono: ${respuesta.data.telefono}</a></p><p>Desea eliminar el turno?</p>`,\n            icon: 'question',\n            showConfirmButton: true,\n            showCancelButton: true,\n            confirmButtonText: 'Eliminar',\n            cancelButtonText: 'Cancelar'\n        }).then(resp => {\n            if (resp.value) {\n                eliminarTurno(t._id)\n            }\n        });\n\n    }\n\n    return (\n        <Fragment>\n            <TableContainer component={Paper}>\n                <Table aria-label=\"customized table\">\n                    <TableHead>\n                        <TableRow>\n                            {\n                                titulos.map((t, i) => {\n                                    return <StyledTableCell\n                                        key={i}\n                                        align=\"center\"\n                                    >\n                                        {t} {dateFormated}\n                                    </StyledTableCell>\n                                })\n                            }\n                        </TableRow>\n                    </TableHead>\n                    <TableBody>\n                        {\n                            turnosDisponibles.length > 0\n                                ?\n\n                                turnosDisponibles.map((td, i) => {\n                                    return <StyledTableRow key={i}>\n                                        <StyledTableCell component=\"th\" scope=\"row\" align=\"center\" onClick={() => onClickTurno(td)}>\n                                            {td.hora} {td.fecha}\n                                        </StyledTableCell>\n                                    </StyledTableRow>\n                                })\n                                :\n                                <div className=\"d-flex justify-content-center\">\n                                    <Alert severity='error'>No hay turnos agendados en esta lista</Alert>\n                                </div>\n                        }\n                    </TableBody>\n                </Table>\n            </TableContainer>\n        </Fragment>\n    );\n}\n\nexport default TableMaterial\n","import React, { useContext, useEffect } from 'react'\nimport AuthContext from '../context/autenticacion/authContext'\nimport { makeStyles } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport ExitToAppIcon from '@material-ui/icons/ExitToApp';\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        flexGrow: 1,\n    },\n    menuButton: {\n        marginRight: theme.spacing(2),\n    },\n    title: {\n        flexGrow: 1,\n    },\n}));\n\nconst Barra = () => {\n\n    const classes = useStyles();\n\n    // Extraer la información de autenticación\n    const authContext = useContext(AuthContext)\n    const { usuario, usuarioAutenticado, cerrarSesion } = authContext\n\n    useEffect(() => {\n        usuarioAutenticado()\n        // eslint-disable-next-line\n    }, [])\n\n    return (\n\n        <div className={classes.root}>\n            <AppBar position=\"static\">\n                <Toolbar>\n                    {/* validación para lo que tarde en ejecutarse el useEffect */}\n                    {\n                        usuario\n                        &&\n                        <Typography variant=\"h6\" className={classes.title}>\n                            Hola <span>{usuario.nombre}!</span>\n                        </Typography>\n                    }\n\n\n                    <Button color=\"inherit\" onClick={() => cerrarSesion()}>\n                        Salir\n                        <ExitToAppIcon/>\n                        </Button>\n                </Toolbar>\n            </AppBar>\n        </div>\n\n        // <header className=\"app-header\">\n        //     {/* validación para lo que tarde en ejecutarse el useEffect */}\n        //     {\n        //         usuario\n        //         &&\n        //         <p className=\"nombre-usuario\">\n        //             Hola <span>{usuario.nombre}</span>\n        //         </p>\n        //     }\n\n        //     <nav className=\"nav-principal\">\n        //         <button\n        //             className=\"btn btn-blank cerrar-sesion\"\n        //             onClick={() => cerrarSesion()}\n        //         >\n        //             Cerrar sesión\n        //         </button>\n        //     </nav>\n        // </header>\n    )\n}\n\nexport default Barra\n","import React, { useState, useContext, useEffect } from 'react'\nimport TableMaterial from './TableMaterial'\nimport Button from '@material-ui/core/Button';\nimport Alert from '@material-ui/lab/Alert';\nimport Barra from './Barra';\nimport AuthContext from '../context/autenticacion/authContext'\nimport TurnoContext from '../context/turnos/turnoContext'\nimport { LoopCircleLoading } from 'react-loadingg'\nimport AddIcon from '@material-ui/icons/Add';\nimport coliseo from '../img/coliseo.png'\n\nconst Home = (props) => {\n\n    // Extraer la información de autenticación\n    const authContext = useContext(AuthContext)\n    const { usuarioAutenticado, usuario } = authContext\n\n    const turnoContext = useContext(TurnoContext)\n    const { turnos, obtenerTurnos, turnosParaHoy, turnosResto } = turnoContext\n\n    // State\n    const [disabled, setDisabled] = useState(false)\n\n    useEffect(() => {\n        if (usuario) {\n            usuarioAutenticado()\n        }\n        obtenerTurnos()\n        // eslint-disable-next-line\n    }, [])\n\n    const onClick = () => {\n        if (turnos.length >= 1 && usuario.rol !== 'Admin') {\n            setDisabled(true)\n            setTimeout(() => {\n                setDisabled(false)\n            }, 3000)\n        } else {\n            // window.location.href = '/turnero'\n            props.history.push('/turnero')\n        }\n    }\n\n\n\n    if (turnos) {\n        return (\n            <div className='mt-3'>\n\n                <Barra />\n\n                {/* <div className=\"text-center mt-5 p-3\">\n                    <img src={coliseo} alt=\"\" width=\"200\"/>\n                </div> */}\n\n                <TableMaterial\n                    titulos={[\"Mis turnos agendados para hoy\"]}\n                    turnosDisponibles={turnosParaHoy}\n                />\n\n                <TableMaterial\n                    titulos={[\"Mis próximos turnos agendados\"]}\n                    turnosDisponibles={turnosResto}\n                />\n\n                <div className='mt-5 d-flex justify-content-center'>\n\n                    <Button variant=\"contained\" color=\"primary\" onClick={onClick} disabled={disabled}>\n                        <AddIcon/>\n                        Agregar Turno\n                            </Button>\n                </div>\n                {\n                    disabled\n                    &&\n                    <div className='mt-5 d-flex justify-content-center'>\n                        <Alert severity=\"warning\">No puedes agendar mas de 1 turno</Alert>\n                    </div>\n                }\n            </div>\n        )\n    } else {\n        return <LoopCircleLoading />\n    }\n\n}\n\nexport default Home\n","import { createContext } from 'react'\n\nconst alertaContext = createContext()\n\nexport default alertaContext\n","import React, { useState, useContext, useEffect } from 'react'\nimport { Link } from 'react-router-dom'\nimport AlertaContext from '../../context/alertas/alertaContext'\nimport AuthContext from '../../context/autenticacion/authContext'\nimport Avatar from '@material-ui/core/Avatar';\nimport Button from '@material-ui/core/Button';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport TextField from '@material-ui/core/TextField';\n// import FormControlLabel from '@material-ui/core/FormControlLabel';\n// import Checkbox from '@material-ui/core/Checkbox';\n// import Link from '@material-ui/core/Link';\n// import Grid from '@material-ui/core/Grid';\nimport Box from '@material-ui/core/Box';\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Container from '@material-ui/core/Container';\nimport Alert from '@material-ui/lab/Alert';\n\nfunction Copyright() {\n    return (\n        <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\n            {'Copyright © '}\n            <Link color=\"inherit\" to=\"https://material-ui.com/\">\n                DY\n      </Link>{' '}\n            {new Date().getFullYear()}\n            {'.'}\n        </Typography>\n    );\n}\n\nconst useStyles = makeStyles((theme) => ({\n    paper: {\n        marginTop: theme.spacing(8),\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n    },\n    avatar: {\n        margin: theme.spacing(1),\n        backgroundColor: theme.palette.secondary.main,\n    },\n    form: {\n        width: '100%', // Fix IE 11 issue.\n        marginTop: theme.spacing(1),\n    },\n    submit: {\n        margin: theme.spacing(3, 0, 2),\n    },\n}));\n\nexport default function NuevaLogin(props) {\n\n    // extraer los valores del context\n    const alertaContext = useContext(AlertaContext)\n    const { alerta, mostrarAlerta } = alertaContext\n\n    const authContext = useContext(AuthContext)\n    const { registrarUsuario, mensaje, autenticado } = authContext\n\n    // En caso de que  el usuario se haya autenticado, registrado o sea un registro duplicado\n    useEffect(() => {\n        if (autenticado) {\n            props.history.push('/home')\n        }\n\n        if (mensaje) {\n            mostrarAlerta(mensaje.msg, mensaje.categoria)\n        }\n        // eslint-disable-next-line\n    }, [mensaje, autenticado, props.history])\n\n    // State para iniciar sesion\n    const [usuario, setUsuario] = useState({\n        nombre: '',\n        rol: '',\n        email: '',\n        password: '',\n        telefono: '',\n        confirmar: ''\n    })\n\n    const { nombre, email, telefono, password, confirmar } = usuario\n\n    const onChange = e => {\n        setUsuario({\n            ...usuario,\n            [e.target.name]: e.target.value\n        })\n    }\n\n    const onSubmit = e => {\n        e.preventDefault()\n        // validar campos vacios\n        if (nombre.trim() === '' || email.trim() === '' || telefono.trim() === '' || password.trim() === '') {\n            mostrarAlerta('Todos los campos son obligatorios', 'alert-danger')\n            return\n        }\n        // validar 6 caracteres\n        if (password.length < 6) {\n            mostrarAlerta('El password debe tener un minimo de 6 caracteres', 'alert-danger')\n            return\n        }\n        // Validar igualdad de password\n        if (password !== confirmar) {\n            mostrarAlerta('Las contraseñas no son iguales', 'alert-danger')\n            return\n        }\n        // Pasarlo al action\n        registrarUsuario({\n            nombre,\n            email,\n            password,\n            telefono\n        })\n    }\n\n    const classes = useStyles();\n\n    return (\n        <Container component=\"main\" maxWidth=\"xs\">\n            <CssBaseline />\n            <div className={classes.paper}>\n                <Avatar className={classes.avatar}>\n                    <LockOutlinedIcon />\n                </Avatar>\n                <Typography component=\"h1\" variant=\"h5\">\n                    Crear Nueva Cuenta\n        </Typography>\n                <form className={classes.form} noValidate onSubmit={onSubmit}>\n                    <TextField\n                        variant=\"outlined\"\n                        margin=\"normal\"\n                        required\n                        fullWidth\n                        id=\"nombre\"\n                        label=\"Nombre\"\n                        name=\"nombre\"\n                        autoFocus\n                        value={nombre}\n                        onChange={onChange}\n                    />\n                    <TextField\n                        variant=\"outlined\"\n                        margin=\"normal\"\n                        required\n                        fullWidth\n                        id=\"telefono\"\n                        label=\"Telefono (con característica)\"\n                        name=\"telefono\"\n                        value={telefono}\n                        onChange={onChange}\n                    />\n                    <TextField\n                        variant=\"outlined\"\n                        margin=\"normal\"\n                        required\n                        fullWidth\n                        id=\"email\"\n                        label=\"Email\"\n                        name=\"email\"\n                        value={email}\n                        onChange={onChange}\n                    />\n                    <TextField\n                        variant=\"outlined\"\n                        margin=\"normal\"\n                        required\n                        fullWidth\n                        name=\"password\"\n                        label=\"Contraseña\"\n                        type=\"password\"\n                        id=\"password\"\n                        value={password}\n                        onChange={onChange}\n                    />\n                    <TextField\n                        variant=\"outlined\"\n                        margin=\"normal\"\n                        required\n                        fullWidth\n                        name=\"confirmar\"\n                        label=\"Confirmar\"\n                        type=\"password\"\n                        id=\"confirmar\"\n                        value={confirmar}\n                        onChange={onChange}\n                    />\n                    {/* <FormControlLabel\n                        control={<Checkbox value=\"remember\" color=\"primary\" />}\n                        label=\"Remember me\"\n                    /> */}\n                    <Button\n                        type=\"submit\"\n                        fullWidth\n                        variant=\"contained\"\n                        color=\"primary\"\n                        className={classes.submit}\n                    >\n                        Crear Cuenta\n                    </Button>\n                    {/* <Grid container>\n                        <Grid item xs>\n                            <Link href=\"#\" variant=\"body2\">\n                                Forgot password?\n              </Link>\n                        </Grid>\n                        <Grid item>\n                            <Link href=\"#\" variant=\"body2\">\n                                {\"Don't have an account? Sign Up\"}\n                            </Link>\n                        </Grid>\n                    </Grid> */}\n                </form>\n                <Link to='/' >\n                    Volver\n                </Link>\n                {alerta && <Alert severity='error'>{alerta.msg}</Alert>}\n            </div>\n            <Box mt={8}>\n                <Copyright />\n            </Box>\n        </Container>\n    );\n}","import clienteAxios from './axios'\n\nconst tokenAuth = token => {\n    if (token) {\n        clienteAxios.defaults.headers.common['x-auth-token'] = token\n    } else {\n        delete clienteAxios.defaults.headers.common['x-auth-token']\n    }\n}\n\nexport default tokenAuth","import React, { useContext, useEffect } from 'react'\nimport { Route, Redirect } from 'react-router-dom'\nimport AuthContext from '../../context/autenticacion/authContext'\n\nconst RutaPrivada = ({ component: Component, ...props }) => {\n\n    const authContext = useContext(AuthContext)\n    const { autenticado, usuarioAutenticado, cargando } = authContext\n\n    useEffect(() => {\n        usuarioAutenticado()\n        // eslint-disable-next-line\n    }, [])\n\n    return (\n        <Route {...props} render={props => !autenticado && !cargando ? (\n            <Redirect to='/' />\n        )\n            :\n            (\n                <Component {...props} />\n            )\n    }\n        />\n    )\n}\n\nexport default RutaPrivada","import React, { useState, useEffect, useContext } from 'react'\nimport { useHistory } from 'react-router-dom'\nimport { KeyboardDatePicker, MuiPickersUtilsProvider } from '@material-ui/pickers'\nimport DateFnsUtils from '@date-io/date-fns'\nimport deLocale from \"date-fns/locale/es\";\nimport moment from 'moment'\nimport { TableContainer, Paper, Table, TableCell, withStyles, TableRow, TableHead, TableBody, Button } from '@material-ui/core';\nimport Swal from 'sweetalert2';\nimport TurnoContext from '../context/turnos/turnoContext'\nimport AuthContext from '../context/autenticacion/authContext'\nimport { Link } from 'react-router-dom';\nimport Alert from '@material-ui/lab/Alert';\nimport { LoopCircleLoading } from 'react-loadingg';\n\n\nconst Turnero = () => {\n\n    const StyledTableCell = withStyles(theme => ({\n        head: {\n            backgroundColor: '#3f51b5',\n            color: theme.palette.common.white,\n        },\n        body: {\n            fontSize: 14,\n        },\n    }))(TableCell);\n\n    const StyledTableRow = withStyles(theme => ({\n        root: {\n            '&:nth-of-type(odd)': {\n                backgroundColor: theme.palette.background.default,\n            },\n        },\n    }))(TableRow);\n\n    // Obtener el state del context\n    const turnoContext = useContext(TurnoContext)\n    const { agregarTurno,\n            obtenerHorasDisponibles,\n            turnosDisponibles, \n            turnos, \n            cambiarHorarioAtencion,\n            cargandoTurnos } = turnoContext\n\n    // Extraer la información de autenticación\n    const authContext = useContext(AuthContext)\n    const { usuario } = authContext\n\n    // State\n    const [fechaCalendario, setFechaCalendario] = useState(new Date())\n    const [fechaSeleccionada, setfechaSeleccionada] = useState(moment(new Date()).format('DD-MM-YYYY'))\n    const [disabled, setDisabled] = useState(false)\n\n\n    useEffect(() => {\n        cambiarHorarioAtencion(moment(fechaCalendario).day())\n        obtenerHorasDisponibles(fechaSeleccionada)\n        // eslint-disable-next-line\n    }, [fechaCalendario, turnos])\n\n\n    const history = useHistory()\n\n    const onChange = async date => {\n\n        if (moment(date).day() === 0 || moment(date).day() === 1) {\n            Swal.fire(\n                'Los días Domingo y Lunes no atendemos',\n                'Por favor seleccione otra fecha',\n                'info'\n              )\n            return\n        }\n        let dateFormated = moment(date).format('DD-MM-YYYY')\n        setfechaSeleccionada(dateFormated)\n        setFechaCalendario(date)\n        // Hace una consulta para traer los turnos ocupados en la fecha seleccionada\n        // para ello cuando cambia fechaCalendario se ejecuta obtenerOcupados() en el useEffect\n    }\n\n    const onClickTurno = hora => {\n        if (turnos.length >= 1 && usuario.rol !== 'Admin') {\n            setDisabled(true)\n            return\n        }\n        const turno = { fecha: fechaSeleccionada, hora: hora }\n\n        Swal.fire({\n            title: 'Atención!',\n            text: `Vas a agendar un turno para el día ${turno.fecha} a las ${turno.hora} hs`,\n            type: 'info',\n            showConfirmButton: true,\n            confirmButtonText: 'Confirmar',\n            showCancelButton: true,\n            cancelButtonText: 'Cancelar'\n        }).then(resp => {\n            if (resp.value) {\n                agregarTurno(turno)\n                console.log('turno creado')\n                history.push('/home')\n                Swal.fire({\n                    title: 'Turno agendado con éxito!',\n                    text: `Has agendado un turno para el día ${turno.fecha} a las ${turno.hora} hs`,\n                    type: 'info'\n                })\n            }\n        });\n    }\n\n    if (cargandoTurnos) {\n        return <LoopCircleLoading />\n    } else {\n        return (\n            <div className=\"container\">\n    \n                <h2 style={{ color: 'black' }} align=\"center\">Turnero</h2>\n    \n                <div className='mb-3' align=\"center\" style={{ backgroundColor: 'white' }}>\n                    <MuiPickersUtilsProvider utils={DateFnsUtils} locale={deLocale}>\n                        <KeyboardDatePicker\n                            margin=\"normal\"\n                            id=\"date-picker-dialog\"\n                            label=\"Fecha de Turno\"\n                            format=\"dd/MM/yyyy\"\n                            value={fechaCalendario}\n                            minDate={moment(new Date()).format('YYYY/MM/DD')}\n                            maxDate={moment().day(14)}\n                            onChange={onChange}\n                            KeyboardButtonProps={{\n                                'aria-label': 'change date',\n                            }}\n                        />\n                    </MuiPickersUtilsProvider>\n                </div>\n    \n                {\n                    turnosDisponibles.length === 0\n                        ?\n                        <div className=\"alert alert-danger\">\n                            <h5>No quedan tunos disponibles para el dia  {fechaSeleccionada}</h5>\n                        </div>\n                        :\n                        <div>\n                            <TableContainer component={Paper}>\n                                <Table aria-label=\"customized table\">\n                                    <TableHead>\n                                        <TableRow>\n                                            <StyledTableCell\n                                                align=\"center\"\n                                            >\n                                                Turnos Disponibles para el dia {fechaSeleccionada}\n                                            </StyledTableCell>\n                                        </TableRow>\n                                    </TableHead>\n                                    <TableBody>\n                                        {turnosDisponibles.map((td, i) => (\n                                            // valida que no esten disponibles los turnos iguales y anteriores a la hora actual\n                                            (td.split(':')[0] > new Date().getHours() || fechaSeleccionada !== moment(new Date()).format('DD-MM-YYYY')) && \n                                            <StyledTableRow key={i}>\n                                                {console.log(fechaSeleccionada !== moment(new Date()).format('DD-MM-YYYY'))}\n                                                <StyledTableCell component=\"th\" scope=\"row\" align=\"center\" onClick={() => onClickTurno(td)}>\n                                                    {td}\n                                                </StyledTableCell>\n                                            </StyledTableRow>\n                                        ))}\n                                    </TableBody>\n                                </Table>\n                            </TableContainer>\n                        </div>\n    \n                }\n                {\n                    disabled\n                    &&\n                    <div className='mt-5 d-flex justify-content-center'>\n                        <Alert severity=\"warning\">No puedes agendar mas de 1 turno</Alert>\n                    </div>\n                }\n                <div className='mt-5 d-flex justify-content-center'>\n                    <Button variant=\"contained\" color=\"primary\">\n                        <Link style={{ color: 'white' }} to='/home'>Volver</Link>\n                    </Button>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default Turnero\n","import { MOSTRAR_ALERTA, OCULTAR_ALERTA } from '../../types'\n\nexport default (state, action) => {\n    switch (action.type) {\n        case MOSTRAR_ALERTA:\n            return {\n                alerta: action.payload\n            }\n        case OCULTAR_ALERTA:\n            return {\n                alerta: null\n            }\n        default:\n            return state\n    }\n}","export const MOSTRAR_ALERTA = 'MOSTRAR_ALERTA'\nexport const OCULTAR_ALERTA = 'OCULTAR_ALERTA'\n\nexport const REGISTRO_EXITOSO = 'REGISTRO_EXITOSO'\nexport const REGISTRO_ERROR = 'REGISTRO_ERROR'\nexport const OBTENER_USUARIO = 'OBTENER_USUARIO'\nexport const LOGIN_EXITOSO = 'LOGIN_EXITOSO'\nexport const LOGIN_ERROR = 'LOGIN_ERROR'\nexport const CERRAR_SESION = 'CERRAR_SESION'\n\nexport const OBTENER_TURNOS = 'OBTENER_TURNOS'\nexport const AGREGAR_TURNO = 'AGREGAR_TURNO'\nexport const ELIMINAR_TURNO = 'ELIMINAR_TURNO'\nexport const OBTENER_TURNOS_X_FECHA = 'OBTENER_TURNOS_X_FECHA'\nexport const CAMBIAR_HORARIO_X_DIA = 'CAMBIAR_HORARIO_X_DIA'\n","import React, { useReducer } from 'react'\nimport alertaContext from './alertaContext'\nimport alertaReducer from './alertaReducer'\nimport { MOSTRAR_ALERTA, OCULTAR_ALERTA } from '../../types'\n\nconst AlertaState = props => {\n    const initialState = {\n        alerta: null\n    }\n\n    const [state, dispatch] =useReducer(alertaReducer, initialState)\n\n    const mostrarAlerta = (msg, categoria) => {\n        dispatch({\n            type: MOSTRAR_ALERTA,\n            payload: {\n                msg,\n                categoria\n            }\n        })\n\n        setTimeout(() => {\n            dispatch({\n                type: OCULTAR_ALERTA\n            })\n        }, 5000)\n    }\n\n    return (\n        <alertaContext.Provider\n            value={{\n                alerta:state.alerta,\n                mostrarAlerta\n            }}\n        >\n            {props.children}\n        </alertaContext.Provider>\n    )\n\n}\n\nexport default AlertaState","import {\n    REGISTRO_EXITOSO,\n    REGISTRO_ERROR,\n    OBTENER_USUARIO,\n    LOGIN_EXITOSO,\n    LOGIN_ERROR,\n    CERRAR_SESION\n} from '../../types'\n\nexport default (state, action) => {\n    switch (action.type) {\n        case REGISTRO_EXITOSO:\n            localStorage.setItem('token', action.payload.token)\n            return {\n                ...state,\n                autenticado: true,\n                mensaje: null\n            }\n        case LOGIN_EXITOSO:\n            localStorage.setItem('token', action.payload.token)\n            return {\n                ...state,\n                token: action.payload.token,\n                autenticado: true,\n                mensaje: null,\n                cargando: false\n            }\n        case OBTENER_USUARIO:\n            return {\n                ...state,\n                autenticado: true,\n                usuario: action.payload,\n                cargando: false\n            }\n        case REGISTRO_ERROR:\n        case LOGIN_ERROR:\n        case CERRAR_SESION:\n            localStorage.removeItem('token')\n            return {\n                ...state,\n                token: null,\n                mensaje: action.payload,\n                autenticado: null,\n                usuario: null,\n                cargando: false\n            }\n        default:\n            return state\n    }\n}","import React, { useReducer } from 'react'\nimport clienteAxios from '../../config/axios'\nimport AuthContext from './authContext'\nimport AuthReducer from './authReducer'\nimport tokenAuth from '../../config/token'\nimport {\n    REGISTRO_EXITOSO,\n    REGISTRO_ERROR,\n    OBTENER_USUARIO,\n    LOGIN_EXITOSO,\n    LOGIN_ERROR,\n    CERRAR_SESION\n} from '../../types'\n\nconst AuthState = props => {\n    const initialState = {\n        token: localStorage.getItem('token'),\n        autenticado: null,\n        usuario: null,\n        mensaje: null,\n        cargando: true\n    }\n\n    const [state, dispatch] = useReducer(AuthReducer, initialState)\n\n    // Las funciones\n    const registrarUsuario = async datos => {\n        try {\n            const respuesta = await clienteAxios.post('/api/usuarios', datos)\n            dispatch({\n                type: REGISTRO_EXITOSO,\n                payload: respuesta.data\n            })\n            // Obtener el usuario\n            usuarioAutenticado()\n        } catch (error) {\n            // console.log(error.response.data.msg)\n            const alerta = {\n                msg: error.response.data.msg,\n                categoria: 'alert-danger'\n            }\n            dispatch({\n                type: REGISTRO_ERROR,\n                payload: alerta\n            })\n        }\n    }\n\n    // Retorna el usuario autenticado\n    const usuarioAutenticado = async () => {\n        const token = localStorage.getItem('token')\n        // funcion para enviar el token por header\n        if (token) {\n            tokenAuth(token)\n        }\n\n        try {\n            const respuesta = await clienteAxios.get('/api/auth')\n            dispatch({\n                type: OBTENER_USUARIO,\n                payload: respuesta.data\n            })\n        } catch (error) {\n            // console.log(error.response.data.msg)\n            dispatch({\n                type: LOGIN_ERROR\n            })\n        }\n    }\n\n    // Cuando el usuario inicia sesión\n    const iniciarSesion = async datos => {\n        try {\n            const respuesta = await clienteAxios.post('/api/auth', datos)\n            dispatch({\n                type: LOGIN_EXITOSO,\n                payload: respuesta.data\n            })\n            // Obtener el usuario\n            usuarioAutenticado()\n        } catch (error) {\n            console.log(error.response.data.msg)\n            const alerta = {\n                msg: error.response.data.msg,\n                categoria: 'alert-danger'\n            }\n            dispatch({\n                type: LOGIN_ERROR,\n                payload: alerta\n            })\n        }\n    }\n\n    // Cierra la sesión del usuario\n    const cerrarSesion = () => {\n        dispatch({\n            type: CERRAR_SESION\n        })\n    }\n\n    return (\n        <AuthContext.Provider\n            value={{\n                token: state.token,\n                autenticado: state.autenticado,\n                usuario: state.usuario,\n                mensaje: state.mensaje,\n                cargando: state.cargando,\n                registrarUsuario,\n                iniciarSesion,\n                usuarioAutenticado,\n                cerrarSesion\n            }}\n        >\n            {props.children}\n        </AuthContext.Provider>\n    )\n}\n\nexport default AuthState","import { OBTENER_TURNOS, AGREGAR_TURNO, ELIMINAR_TURNO, OBTENER_TURNOS_X_FECHA, CAMBIAR_HORARIO_X_DIA } from '../../types'\nimport moment from 'moment'\n\nexport default (state, action) => {\n    switch (action.type) {\n        case OBTENER_TURNOS:\n            return {\n                ...state,\n                turnos: action.payload,\n                turnosParaHoy: action.payload.filter(t => t.fecha === moment(new Date()).format('DD-MM-YYYY')),\n                turnosResto: action.payload.filter(t => t.fecha !== moment(new Date()).format('DD-MM-YYYY'))\n            }\n        case AGREGAR_TURNO:\n            return {\n                ...state,\n                turnos: [...state.turnos, action.payload]\n            }\n        case ELIMINAR_TURNO:\n            return {\n                ...state,\n                turnos: state.turnos.filter( turno => turno._id !== action.payload),\n                turnosParaHoy: state.turnosParaHoy.filter( tp => tp._id !== action.payload),\n                turnosResto: state.turnosResto.filter( tr => tr._id !== action.payload)\n            }\n        case OBTENER_TURNOS_X_FECHA:\n            return {\n                ...state,\n                turnosDisponibles: state.horarioDeAtencion.filter(t => action.payload.indexOf(t) === -1),\n                cargandoTurnos: false\n            }\n        case CAMBIAR_HORARIO_X_DIA:\n            if (action.payload === 2 || action.payload === 5) { //martes y viernes\n                return {\n                    ...state,\n                    horarioDeAtencion: ['09:00', '10:00', '11:00','12:00', '13:00']\n                }\n            } else if (action.payload === 4 || action.payload === 6) { //jueves y sabados\n                return {\n                    ...state,\n                    horarioDeAtencion: ['16:00', '17:00', '18:00', '19:00', '20:00']\n                }\n            } else if (action.payload === 3) { //miercoles\n                return {\n                    ...state,\n                    horarioDeAtencion: ['13:00', '14:00', '15:00', '16:00', '17:00', '18:00']\n                }\n            }\n            else {\n                return {\n                    ...state,\n                    horarioDeAtencion: []\n                }\n            }\n        default:\n            return state\n    }\n}","import React, { useReducer } from 'react'\nimport turnoContext from './turnoContext'\nimport turnoReducer from './turnoReducer'\nimport { OBTENER_TURNOS, AGREGAR_TURNO, ELIMINAR_TURNO, OBTENER_TURNOS_X_FECHA, CAMBIAR_HORARIO_X_DIA } from '../../types'\nimport clienteAxios from '../../config/axios'\n\nconst TurnoState = props => {\n\n    const initialState = {\n        turnos: [],\n        turnosDisponibles: [],\n        horarioDeAtencion: [],\n        turnosParaHoy: [],\n        turnosResto: [],\n        cargandoTurnos: true\n    }\n\n    // Dispatch para ejecutar las acciones\n    const [state, dispatch] = useReducer(turnoReducer, initialState)\n\n    // Funciones para el CRUD de Turnos\n    // getMisTurnos\n    const obtenerTurnos = async () => {\n        try {\n            const response = await clienteAxios.get('/api/turnos')\n            dispatch({\n                type: OBTENER_TURNOS,\n                payload: response.data\n            })\n        } catch (error) {\n            console.log(error)\n        }\n    }\n\n    // Obtener horasDisponibles por fecha\n    const obtenerHorasDisponibles = async fecha => {\n        try {\n            // Trae las horas ocupadas de la fecha\n            const respuesta = await clienteAxios.get(`api/turnos/fecha/${fecha}`)\n            const aux = []\n            await respuesta.data.map(t => aux.push(t.hora))\n            dispatch({\n                type: OBTENER_TURNOS_X_FECHA,\n                payload: aux\n            })\n        } catch (error) {\n            console.log(error)\n        }\n    }\n\n    // Agregar Turno\n    const agregarTurno = async turno => {\n        try {\n            const resultado = await clienteAxios.post('/api/turnos', turno)\n            // Insertar el turno en el state\n            dispatch({\n                type: AGREGAR_TURNO,\n                payload: resultado.data\n            })\n        } catch (error) {\n            console.log(error)\n        }\n    }\n\n    // Eliminar un Turno\n    const eliminarTurno = async turnoId => {\n        try {\n            await clienteAxios.delete(`/api/turnos/${turnoId}`)\n            dispatch({\n                type: ELIMINAR_TURNO,\n                payload: turnoId\n            })\n        } catch (error) {\n            console.log(error)\n        }\n    }\n\n    const cambiarHorarioAtencion = async dia => {\n        try {\n            dispatch({\n                type: CAMBIAR_HORARIO_X_DIA,\n                payload: dia\n            })\n        } catch (error) {\n            console.log(error)\n        }\n    }\n\n    return (\n        <turnoContext.Provider\n            value={{\n                turnos: state.turnos,\n                horarioDeAtencion: state.horarioDeAtencion,\n                turnosDisponibles: state.turnosDisponibles,\n                turnosParaHoy: state.turnosParaHoy,\n                turnosResto: state.turnosResto,\n                cargandoTurnos: state.cargandoTurnos,\n                obtenerTurnos,\n                agregarTurno,\n                eliminarTurno,\n                obtenerHorasDisponibles,\n                cambiarHorarioAtencion\n            }}\n        >\n            {props.children}\n        </turnoContext.Provider>\n    )\n}\n\nexport default TurnoState","import React, { useState, useContext, useEffect } from 'react'\nimport { Link } from 'react-router-dom'\nimport AlertaContext from '../../context/alertas/alertaContext'\nimport AuthContext from '../../context/autenticacion/authContext'\nimport Button from '@material-ui/core/Button';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport TextField from '@material-ui/core/TextField';\nimport Box from '@material-ui/core/Box';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Container from '@material-ui/core/Container';\nimport Alert from '@material-ui/lab/Alert';\nimport coliseo from '../../img/coliseochico.jpeg'\nimport '../../App.css'\n\nfunction Copyright() {\n    return (\n        <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\n            {'Copyright © '}\n            <Link color=\"inherit\" to=\"https://material-ui.com/\">\n                DY\n      </Link>{' '}\n            {new Date().getFullYear()}\n            {'.'}\n        </Typography>\n    );\n}\n\nconst useStyles = makeStyles((theme) => ({\n    paper: {\n        marginTop: theme.spacing(4),\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n    },\n    avatar: {\n        margin: theme.spacing(1),\n        backgroundColor: theme.palette.secondary.main,\n    },\n    form: {\n        width: '100%', // Fix IE 11 issue.\n        marginTop: theme.spacing(1),\n    },\n    submit: {\n        margin: theme.spacing(3, 0, 2),\n    },\n}));\n\nexport default function Login(props) {\n\n    // extraer los valores del context\n    const alertaContext = useContext(AlertaContext)\n    const { alerta, mostrarAlerta } = alertaContext\n\n    const authContext = useContext(AuthContext)\n    const { mensaje, autenticado, iniciarSesion } = authContext\n\n    // En caso de que  el usuario no exista o el password sea incorrecto\n    useEffect(() => {\n        if (autenticado) {\n            props.history.push('/home')\n        }\n\n        if (mensaje) {\n            mostrarAlerta(mensaje.msg, mensaje.categoria)\n        }\n        // eslint-disable-next-line\n    }, [mensaje, autenticado, props.history])\n\n    const [usuario, setUsuario] = useState({\n        email: '',\n        password: ''\n    })\n\n    const { email, password } = usuario\n\n    const onChange = e => {\n        setUsuario({\n            ...usuario,\n            [e.target.name]: e.target.value\n        })\n    }\n\n    const onSubmit = e => {\n        e.preventDefault()\n        // validar campos vacios\n        if (email.trim() === '' || password.trim() === '') {\n            mostrarAlerta('Todos los campos son obligatorios', 'alert-danger')\n        }\n\n        // Pasarlo al action\n        iniciarSesion({ email, password })\n    }\n\n    const classes = useStyles();\n\n    return (\n        <Container component=\"main\" maxWidth=\"xs\">\n            <nav className=\"d-flex justify-content-center align-items-end\">\n                <img className=\"pb-1\" src={coliseo} alt=\"\" width=\"70\"/>\n                <h1>Coliseo Barbería</h1>\n            </nav>\n            <CssBaseline />\n\n            <div className={classes.paper}>\n\n                <Typography className=\"mt-5\" component=\"h1\" variant=\"h5\">\n                    Hola! Ingresá al turnero\n                </Typography>\n\n                <form className={classes.form} noValidate onSubmit={onSubmit}>\n                    <TextField\n                        variant=\"outlined\"\n                        margin=\"normal\"\n                        required\n                        fullWidth\n                        id=\"email\"\n                        label=\"Email\"\n                        name=\"email\"\n                        autoComplete=\"email\"\n                        autoFocus\n                        value={email}\n                        onChange={onChange}\n                    />\n                    <TextField\n                        variant=\"outlined\"\n                        margin=\"normal\"\n                        required\n                        fullWidth\n                        name=\"password\"\n                        label=\"Contraseña\"\n                        type=\"password\"\n                        id=\"password\"\n                        autoComplete=\"current-password\"\n                        value={password}\n                        onChange={onChange}\n                    />\n\n                    <Button\n                        type=\"submit\"\n                        fullWidth\n                        variant=\"contained\"\n                        color=\"primary\"\n                        className={classes.submit}\n                    >\n                        Iniciar Sesión\n          </Button>\n                </form>\n                <div className=\"d-flex justify-content-between\">\n                    <p>No tenés cuenta?</p>\n                    <div className=\"ml-1\">\n                        <Link to='/nueva-cuenta' >\n                            Registrate ahora!\n                </Link>\n                    </div>\n                </div>\n                {alerta && <Alert severity='error'>{alerta.msg}</Alert>}\n            </div>\n            <Box mt={8}>\n                <Copyright />\n            </Box>\n        </Container>\n    );\n}","import React, { Component } from 'react';\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\n// import './App.css';\nimport Home from './components/Home'\nimport NuevaCuenta from './components/auth/NuevaCuenta';\nimport tokenAuth from './config/token'\nimport RutaPrivada from './components/rutas/RutaPrivada'\nimport Turnero from './components/Turnero';\nimport AlertaState from './context/alertas/alertaState'\nimport AuthState from './context/autenticacion/authState'\nimport TurnoState from './context/turnos/turnoState'\nimport Login from './components/auth/Login'\n\n// Revisar si tenemos un token\nconst token = localStorage.getItem('token')\n\nif (token) {\n  tokenAuth(token)\n}\n\nclass App extends Component {\n\n  render() {\n    return (\n      <AlertaState>\n        <AuthState>\n          <TurnoState>\n            <Router>\n              <Switch>\n                <Route path='/' exact component={Login} />\n                <Route path='/nueva-cuenta' component={NuevaCuenta} />\n                <RutaPrivada path='/home' component={Home} />\n                <RutaPrivada path='/turnero' component={Turnero} />\n              </Switch>\n            </Router>\n          </TurnoState>\n        </AuthState>\n      </AlertaState>\n    );\n  }\n\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n// import './index.css';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}