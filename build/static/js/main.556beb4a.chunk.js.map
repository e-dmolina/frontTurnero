{"version":3,"sources":["context/turnos/turnoContext.js","context/autenticacion/authContext.js","config/axios.js","components/TableMaterial.js","components/Barra.js","components/Home.js","context/alertas/alertaContext.js","components/auth/NuevaCuenta.js","config/token.js","components/rutas/RutaPrivada.js","components/Turnero.js","context/alertas/alertaReducer.js","types/index.js","context/alertas/alertaState.js","context/autenticacion/authReducer.js","context/autenticacion/authState.js","context/turnos/turnoReducer.js","context/turnos/turnoState.js","components/auth/Login.js","App.js","index.js"],"names":["turnoContext","createContext","authContext","clienteAxios","axios","create","baseURL","StyledTableCell","withStyles","theme","head","backgroundColor","color","palette","common","white","body","fontSize","TableCell","StyledTableRow","root","background","default","TableRow","TableMaterial","titulos","turnosDisponibles","dateFormated","eliminarTurno","useContext","TurnoContext","usuario","AuthContext","buscarUsuario","t","a","get","cliente","respuesta","Swal","fire","title","data","nombre","html","email","telefono","icon","showConfirmButton","showCancelButton","then","resp","value","_id","TableContainer","component","Paper","Table","aria-label","TableHead","map","i","key","align","TableBody","td","scope","onClick","rol","text","fecha","hora","useStyles","makeStyles","flexGrow","menuButton","marginRight","spacing","Barra","classes","usuarioAutenticado","cerrarSesion","useEffect","className","AppBar","position","Toolbar","Typography","variant","Button","Home","props","turnos","obtenerTurnos","turnosParaHoy","turnosResto","useState","disabled","setDisabled","length","setTimeout","history","push","Alert","severity","alertaContext","Copyright","to","Date","getFullYear","paper","marginTop","display","flexDirection","alignItems","avatar","margin","secondary","main","form","width","submit","NuevaLogin","AlertaContext","alerta","mostrarAlerta","registrarUsuario","mensaje","autenticado","msg","categoria","password","confirmar","setUsuario","onChange","e","target","name","Container","maxWidth","CssBaseline","Avatar","noValidate","onSubmit","preventDefault","trim","TextField","required","fullWidth","id","label","autoFocus","type","Box","mt","tokenAuth","token","defaults","headers","RutaPrivada","Component","cargando","render","Turnero","agregarTurno","obtenerHorasDisponibles","cambiarHorarioAtencion","cargandoTurnos","fechaCalendario","setFechaCalendario","moment","format","fechaSeleccionada","setfechaSeleccionada","day","date","style","utils","DateFnsUtils","locale","deLocale","minDate","maxDate","KeyboardButtonProps","turno","console","log","onClickTurno","state","action","payload","AlertaState","useReducer","alertaReducer","dispatch","Provider","children","localStorage","setItem","removeItem","AuthState","initialState","getItem","AuthReducer","datos","post","response","iniciarSesion","filter","tp","tr","horarioDeAtencion","indexOf","TurnoState","turnoReducer","aux","resultado","turnoId","delete","dia","error","Login","autoComplete","App","path","exact","NuevaCuenta","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.556beb4a.chunk.js","sourcesContent":["import { createContext } from 'react'\n\nconst turnoContext = createContext()\n\nexport default turnoContext\n","import { createContext } from 'react'\n\nconst authContext = createContext()\n\nexport default authContext\n","import axios from 'axios'\n\nconst clienteAxios = axios.create({\n    baseURL: 'http://54.232.196.67:4000'\n})\n\nexport default clienteAxios","import React, { Fragment, useContext } from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Swal from 'sweetalert2';\nimport Paper from '@material-ui/core/Paper';\nimport TurnoContext from '../context/turnos/turnoContext'\nimport AuthContext from '../context/autenticacion/authContext'\nimport clienteAxios from '../config/axios'\n\nconst StyledTableCell = withStyles(theme => ({\n    head: {\n        backgroundColor: '#3f51b5',\n        color: theme.palette.common.white,\n    },\n    body: {\n        fontSize: 14,\n    },\n}))(TableCell);\n\nconst StyledTableRow = withStyles(theme => ({\n    root: {\n        '&:nth-of-type(odd)': {\n            backgroundColor: theme.palette.background.default,\n        },\n    },\n}))(TableRow);\n\n\nconst TableMaterial = ({ titulos, turnosDisponibles, dateFormated }) => {\n\n    const turnocontext = useContext(TurnoContext)\n    const { eliminarTurno } = turnocontext\n\n    // Extraer la información de autenticación\n    const authContext = useContext(AuthContext)\n    const { usuario } = authContext\n\n    const onClickTurno = t => {\n\n        if (usuario.rol === 'Admin') {\n            buscarUsuario(t)\n            return\n        }\n\n        Swal.fire({\n            title: 'Atención',\n            text: `Estas seguro de eliminar el turno para el día ${t.fecha} a las ${t.hora}?`,\n            icon: 'question',\n            showConfirmButton: true,\n            showCancelButton: true\n        }).then(resp => {\n            if (resp.value) {\n                eliminarTurno(t._id)\n            }\n        });\n    }\n\n    const buscarUsuario = async t => {\n        const respuesta = await clienteAxios.get(`/api/usuarios/${t.cliente}`)\n        Swal.fire({\n            title: `<h5>cliente: ${respuesta.data.nombre}</h5>`,\n            html: `<p>email: ${respuesta.data.email}</p><p><a href=\"https://wa.me/+54${respuesta.data.telefono}\">Telefono: ${respuesta.data.telefono}</a></p><p>Desea eliminar el turno?</p>`,\n            icon: 'question',\n            showConfirmButton: true,\n            showCancelButton: true\n        }).then(resp => {\n            if (resp.value) {\n                eliminarTurno(t._id)\n            }\n        });\n\n    }\n\n    return (\n        <Fragment>\n            <TableContainer component={Paper}>\n                <Table aria-label=\"customized table\">\n                    <TableHead>\n                        <TableRow>\n                            {\n                                titulos.map((t, i) => {\n                                    return <StyledTableCell\n                                        key={i}\n                                        align=\"center\"\n                                    >\n                                        {t} {dateFormated}\n                                    </StyledTableCell>\n                                })\n                            }\n                        </TableRow>\n                    </TableHead>\n                    <TableBody>\n                        {turnosDisponibles.map((td, i) => {\n                            return <StyledTableRow key={i}>\n                                <StyledTableCell component=\"th\" scope=\"row\" align=\"center\" onClick={() => onClickTurno(td)}>\n                                    {td.hora} {td.fecha}\n                                </StyledTableCell>\n                            </StyledTableRow>\n                        }\n                        )}\n                    </TableBody>\n                </Table>\n            </TableContainer>\n        </Fragment>\n    );\n}\n\nexport default TableMaterial\n","import React, { useContext, useEffect } from 'react'\nimport AuthContext from '../context/autenticacion/authContext'\nimport { makeStyles } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        flexGrow: 1,\n    },\n    menuButton: {\n        marginRight: theme.spacing(2),\n    },\n    title: {\n        flexGrow: 1,\n    },\n}));\n\nconst Barra = () => {\n\n    const classes = useStyles();\n\n    // Extraer la información de autenticación\n    const authContext = useContext(AuthContext)\n    const { usuario, usuarioAutenticado, cerrarSesion } = authContext\n\n    useEffect(() => {\n        usuarioAutenticado()\n        // eslint-disable-next-line\n    }, [])\n\n    return (\n\n        <div className={classes.root}>\n            <AppBar position=\"static\">\n                <Toolbar>\n                    {/* validación para lo que tarde en ejecutarse el useEffect */}\n                    {\n                        usuario\n                        &&\n                        <Typography variant=\"h6\" className={classes.title}>\n                            Hola <span>{usuario.nombre}</span>\n                        </Typography>\n                    }\n\n\n                    <Button color=\"inherit\" onClick={() => cerrarSesion()}>Cerrar Sesión</Button>\n                </Toolbar>\n            </AppBar>\n        </div>\n\n        // <header className=\"app-header\">\n        //     {/* validación para lo que tarde en ejecutarse el useEffect */}\n        //     {\n        //         usuario\n        //         &&\n        //         <p className=\"nombre-usuario\">\n        //             Hola <span>{usuario.nombre}</span>\n        //         </p>\n        //     }\n\n        //     <nav className=\"nav-principal\">\n        //         <button\n        //             className=\"btn btn-blank cerrar-sesion\"\n        //             onClick={() => cerrarSesion()}\n        //         >\n        //             Cerrar sesión\n        //         </button>\n        //     </nav>\n        // </header>\n    )\n}\n\nexport default Barra\n","import React, { useState, useContext, useEffect } from 'react'\nimport TableMaterial from './TableMaterial'\nimport Button from '@material-ui/core/Button';\nimport Alert from '@material-ui/lab/Alert';\nimport Barra from './Barra';\nimport AuthContext from '../context/autenticacion/authContext'\nimport TurnoContext from '../context/turnos/turnoContext'\nimport { LoopCircleLoading } from 'react-loadingg'\n\nconst Home = (props) => {\n\n    // Extraer la información de autenticación\n    const authContext = useContext(AuthContext)\n    const { usuarioAutenticado, usuario } = authContext\n\n    const turnoContext = useContext(TurnoContext)\n    const { turnos, obtenerTurnos, turnosParaHoy, turnosResto } = turnoContext\n\n    // State\n    const [disabled, setDisabled] = useState(false)\n\n    useEffect(() => {\n        if (usuario) {\n        usuarioAutenticado()            \n        }\n        obtenerTurnos()\n        // eslint-disable-next-line\n    }, [])\n\n    const onClick = () => {\n        if (turnos.length >= 1 && usuario.rol !== 'Admin') {\n            setDisabled(true)\n            setTimeout(() => {\n                setDisabled(false)\n            }, 3000)\n        } else {\n            // window.location.href = '/turnero'\n            props.history.push('/turnero')\n        }\n    }\n    \n        if (turnos) {\n            return (\n                <div className='mt-3'>\n        \n                    <Barra />\n        \n                    <TableMaterial\n                        titulos={[\"Mis turnos agendados para hoy\"]}\n                        turnosDisponibles={turnosParaHoy}\n                    />\n        \n                    <TableMaterial\n                        titulos={[\"Mis próximos turnos agendados\"]}\n                        turnosDisponibles={turnosResto}\n                    />\n        \n                    <div className='mt-5 d-flex justify-content-center'>\n        \n                            <Button variant=\"contained\" color=\"primary\" onClick={onClick} disabled={disabled}>\n                                    Agregar Turno\n                            </Button>\n                    </div>\n                    {\n                            disabled\n                            &&\n                            <div className='mt-5 d-flex justify-content-center'>\n                                <Alert severity=\"warning\">No puedes agendar mas de 1 turno</Alert>\n                            </div>\n                        }\n                </div>\n            )\n        } else {\n            return <LoopCircleLoading/>\n        }\n        \n}\n\nexport default Home\n","import { createContext } from 'react'\n\nconst alertaContext = createContext()\n\nexport default alertaContext\n","import React, { useState, useContext, useEffect } from 'react'\nimport { Link } from 'react-router-dom'\nimport AlertaContext from '../../context/alertas/alertaContext'\nimport AuthContext from '../../context/autenticacion/authContext'\nimport Avatar from '@material-ui/core/Avatar';\nimport Button from '@material-ui/core/Button';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport TextField from '@material-ui/core/TextField';\n// import FormControlLabel from '@material-ui/core/FormControlLabel';\n// import Checkbox from '@material-ui/core/Checkbox';\n// import Link from '@material-ui/core/Link';\n// import Grid from '@material-ui/core/Grid';\nimport Box from '@material-ui/core/Box';\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Container from '@material-ui/core/Container';\nimport Alert from '@material-ui/lab/Alert';\n\nfunction Copyright() {\n    return (\n        <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\n            {'Copyright © '}\n            <Link color=\"inherit\" to=\"https://material-ui.com/\">\n                DY\n      </Link>{' '}\n            {new Date().getFullYear()}\n            {'.'}\n        </Typography>\n    );\n}\n\nconst useStyles = makeStyles((theme) => ({\n    paper: {\n        marginTop: theme.spacing(8),\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n    },\n    avatar: {\n        margin: theme.spacing(1),\n        backgroundColor: theme.palette.secondary.main,\n    },\n    form: {\n        width: '100%', // Fix IE 11 issue.\n        marginTop: theme.spacing(1),\n    },\n    submit: {\n        margin: theme.spacing(3, 0, 2),\n    },\n}));\n\nexport default function NuevaLogin(props) {\n\n    // extraer los valores del context\n    const alertaContext = useContext(AlertaContext)\n    const { alerta, mostrarAlerta } = alertaContext\n\n    const authContext = useContext(AuthContext)\n    const { registrarUsuario, mensaje, autenticado } = authContext\n\n    // En caso de que  el usuario se haya autenticado, registrado o sea un registro duplicado\n    useEffect(() => {\n        if (autenticado) {\n            props.history.push('/home')\n        }\n\n        if (mensaje) {\n            mostrarAlerta(mensaje.msg, mensaje.categoria)\n        }\n        // eslint-disable-next-line\n    }, [mensaje, autenticado, props.history])\n\n    // State para iniciar sesion\n    const [usuario, setUsuario] = useState({\n        nombre: '',\n        rol: '',\n        email: '',\n        password: '',\n        telefono: '',\n        confirmar: ''\n    })\n\n    const { nombre, email, telefono, password, confirmar } = usuario\n\n    const onChange = e => {\n        setUsuario({\n            ...usuario,\n            [e.target.name]: e.target.value\n        })\n    }\n\n    const onSubmit = e => {\n        e.preventDefault()\n        // validar campos vacios\n        if (nombre.trim() === '' || email.trim() === '' || telefono.trim() === '' || password.trim() === '') {\n            mostrarAlerta('Todos los campos son obligatorios', 'alert-danger')\n            return\n        }\n        // validar 6 caracteres\n        if (password.length < 6) {\n            mostrarAlerta('El password debe tener minimo 6 caracteres', 'alert-danger')\n            return\n        }\n        // Validar igualdad de password\n        if (password !== confirmar) {\n            mostrarAlerta('Los password no son iguales', 'alert-danger')\n            return\n        }\n        // Pasarlo al action\n        registrarUsuario({\n            nombre,\n            email,\n            password,\n            telefono\n        })\n    }\n\n    const classes = useStyles();\n\n    return (\n        <Container component=\"main\" maxWidth=\"xs\">\n            <CssBaseline />\n            <div className={classes.paper}>\n                <Avatar className={classes.avatar}>\n                    <LockOutlinedIcon />\n                </Avatar>\n                <Typography component=\"h1\" variant=\"h5\">\n                    Crear Nueva Cuenta\n        </Typography>\n                <form className={classes.form} noValidate onSubmit={onSubmit}>\n                    <TextField\n                        variant=\"outlined\"\n                        margin=\"normal\"\n                        required\n                        fullWidth\n                        id=\"nombre\"\n                        label=\"Nombre\"\n                        name=\"nombre\"\n                        autoFocus\n                        value={nombre}\n                        onChange={onChange}\n                    />\n                    <TextField\n                        variant=\"outlined\"\n                        margin=\"normal\"\n                        required\n                        fullWidth\n                        id=\"telefono\"\n                        label=\"Telefono\"\n                        name=\"telefono\"\n                        value={telefono}\n                        onChange={onChange}\n                    />\n                    <TextField\n                        variant=\"outlined\"\n                        margin=\"normal\"\n                        required\n                        fullWidth\n                        id=\"email\"\n                        label=\"Email\"\n                        name=\"email\"\n                        value={email}\n                        onChange={onChange}\n                    />\n                    <TextField\n                        variant=\"outlined\"\n                        margin=\"normal\"\n                        required\n                        fullWidth\n                        name=\"password\"\n                        label=\"Password\"\n                        type=\"password\"\n                        id=\"password\"\n                        value={password}\n                        onChange={onChange}\n                    />\n                    <TextField\n                        variant=\"outlined\"\n                        margin=\"normal\"\n                        required\n                        fullWidth\n                        name=\"confirmar\"\n                        label=\"confirmar\"\n                        type=\"password\"\n                        id=\"confirmar\"\n                        value={confirmar}\n                        onChange={onChange}\n                    />\n                    {/* <FormControlLabel\n                        control={<Checkbox value=\"remember\" color=\"primary\" />}\n                        label=\"Remember me\"\n                    /> */}\n                    <Button\n                        type=\"submit\"\n                        fullWidth\n                        variant=\"contained\"\n                        color=\"primary\"\n                        className={classes.submit}\n                    >\n                        Crear Sesión\n                    </Button>\n                    {/* <Grid container>\n                        <Grid item xs>\n                            <Link href=\"#\" variant=\"body2\">\n                                Forgot password?\n              </Link>\n                        </Grid>\n                        <Grid item>\n                            <Link href=\"#\" variant=\"body2\">\n                                {\"Don't have an account? Sign Up\"}\n                            </Link>\n                        </Grid>\n                    </Grid> */}\n                </form>\n                <Link to='/' >\n                    Volver\n                </Link>\n                {alerta && <Alert severity='error'>{alerta.msg}</Alert>}\n            </div>\n            <Box mt={8}>\n                <Copyright />\n            </Box>\n        </Container>\n    );\n}","import clienteAxios from './axios'\n\nconst tokenAuth = token => {\n    if (token) {\n        clienteAxios.defaults.headers.common['x-auth-token'] = token\n    } else {\n        delete clienteAxios.defaults.headers.common['x-auth-token']\n    }\n}\n\nexport default tokenAuth","import React, { useContext, useEffect } from 'react'\nimport { Route, Redirect } from 'react-router-dom'\nimport AuthContext from '../../context/autenticacion/authContext'\n\nconst RutaPrivada = ({ component: Component, ...props }) => {\n\n    const authContext = useContext(AuthContext)\n    const { autenticado, usuarioAutenticado, cargando } = authContext\n\n    useEffect(() => {\n        usuarioAutenticado()\n        // eslint-disable-next-line\n    }, [])\n\n    return (\n        <Route {...props} render={props => !autenticado && !cargando ? (\n            <Redirect to='/' />\n        )\n            :\n            (\n                <Component {...props} />\n            )\n    }\n        />\n    )\n}\n\nexport default RutaPrivada","import React, { useState, useEffect, useContext } from 'react'\nimport { KeyboardDatePicker, MuiPickersUtilsProvider } from '@material-ui/pickers'\nimport DateFnsUtils from '@date-io/date-fns'\nimport deLocale from \"date-fns/locale/es\";\nimport moment from 'moment'\nimport { TableContainer, Paper, Table, TableCell, withStyles, TableRow, TableHead, TableBody, Button } from '@material-ui/core';\nimport Swal from 'sweetalert2';\nimport TurnoContext from '../context/turnos/turnoContext'\nimport AuthContext from '../context/autenticacion/authContext'\nimport { Link } from 'react-router-dom';\nimport Alert from '@material-ui/lab/Alert';\nimport { LoopCircleLoading } from 'react-loadingg';\n\n\nconst Turnero = () => {\n\n    const StyledTableCell = withStyles(theme => ({\n        head: {\n            backgroundColor: '#3f51b5',\n            color: theme.palette.common.white,\n        },\n        body: {\n            fontSize: 14,\n        },\n    }))(TableCell);\n\n    const StyledTableRow = withStyles(theme => ({\n        root: {\n            '&:nth-of-type(odd)': {\n                backgroundColor: theme.palette.background.default,\n            },\n        },\n    }))(TableRow);\n\n    // Obtener el state del context\n    const turnoContext = useContext(TurnoContext)\n    const { agregarTurno,\n            obtenerHorasDisponibles,\n            turnosDisponibles, \n            turnos, \n            cambiarHorarioAtencion,\n            cargandoTurnos } = turnoContext\n\n    // Extraer la información de autenticación\n    const authContext = useContext(AuthContext)\n    const { usuario } = authContext\n\n    // State\n    const [fechaCalendario, setFechaCalendario] = useState(new Date())\n    const [fechaSeleccionada, setfechaSeleccionada] = useState(moment(new Date()).format('DD-MM-YYYY'))\n    const [disabled, setDisabled] = useState(false)\n\n\n    useEffect(() => {\n        cambiarHorarioAtencion(moment(fechaCalendario).day())\n        obtenerHorasDisponibles(fechaSeleccionada)\n        // eslint-disable-next-line\n    }, [fechaCalendario, turnos])\n\n\n    const onChange = async date => {\n\n        if (moment(date).day() === 0 || moment(date).day() === 1) {\n            return\n        }\n        let dateFormated = moment(date).format('DD-MM-YYYY')\n        setfechaSeleccionada(dateFormated)\n        setFechaCalendario(date)\n        // Hace una consulta para traer los turnos ocupados en la fecha seleccionada\n        // para ello cuando cambia fechaCalendario se ejecuta obtenerOcupados() en el useEffect\n    }\n\n    const onClickTurno = hora => {\n        if (turnos.length >= 1 && usuario.rol !== 'Admin') {\n            setDisabled(true)\n            return\n        }\n        const turno = { fecha: fechaSeleccionada, hora: hora }\n\n        Swal.fire({\n            title: 'Atención',\n            text: `Vas a agendar un turno para el día ${turno.fecha} a las ${turno.hora}`,\n            icon: 'question',\n            showConfirmButton: true,\n            showCancelButton: true\n        }).then(resp => {\n            if (resp.value) {\n                agregarTurno(turno)\n                console.log('turno creado')\n                // window.location.href = '/home'\n                Swal.fire({\n                    title: 'Agendado con éxito!',\n                    text: `Has agendado un turno para el día ${turno.fecha} a las ${turno.hora}`,\n                    icon: 'info'\n                })\n            }\n        });\n    }\n\n    if (cargandoTurnos) {\n        return <LoopCircleLoading />\n    } else {\n        return (\n            <div className=\"container\">\n    \n                <h1 style={{ color: 'black' }} align=\"center\">Turnero</h1>\n    \n                <div className='mb-3' align=\"center\" style={{ backgroundColor: 'white' }}>\n                    <MuiPickersUtilsProvider utils={DateFnsUtils} locale={deLocale}>\n                        <KeyboardDatePicker\n                            margin=\"normal\"\n                            id=\"date-picker-dialog\"\n                            label=\"Fecha de Turno\"\n                            format=\"dd/MM/yyyy\"\n                            value={fechaCalendario}\n                            minDate={moment(new Date()).format('YYYY/MM/DD')}\n                            maxDate={moment().day(14)}\n                            onChange={onChange}\n                            KeyboardButtonProps={{\n                                'aria-label': 'change date',\n                            }}\n                        />\n                    </MuiPickersUtilsProvider>\n                </div>\n    \n                {\n                    turnosDisponibles.length === 0\n                        ?\n                        <div className=\"alert alert-danger\">\n                            <h5>No quedan tunos disponibles para el dia  {fechaSeleccionada}</h5>\n                        </div>\n                        :\n                        <div>\n                            <TableContainer component={Paper}>\n                                <Table aria-label=\"customized table\">\n                                    <TableHead>\n                                        <TableRow>\n                                            <StyledTableCell\n                                                align=\"center\"\n                                            >\n                                                Turnos Disponibles para el dia {fechaSeleccionada}\n                                            </StyledTableCell>\n                                        </TableRow>\n                                    </TableHead>\n                                    <TableBody>\n                                        {turnosDisponibles.map((td, i) => (\n                                            <StyledTableRow key={i}>\n                                                <StyledTableCell component=\"th\" scope=\"row\" align=\"center\" onClick={() => onClickTurno(td)}>\n                                                    {td}\n                                                </StyledTableCell>\n                                            </StyledTableRow>\n                                        ))}\n                                    </TableBody>\n                                </Table>\n                            </TableContainer>\n                        </div>\n    \n                }\n                {\n                    disabled\n                    &&\n                    <div className='mt-5 d-flex justify-content-center'>\n                        <Alert severity=\"warning\">No puedes agendar mas de 1 turno</Alert>\n                    </div>\n                }\n                <div className='mt-5 d-flex justify-content-center'>\n                    <Button variant=\"contained\" color=\"primary\">\n                        <Link style={{ color: 'white' }} to='/home'>Volver</Link>\n                    </Button>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default Turnero\n","import { MOSTRAR_ALERTA, OCULTAR_ALERTA } from '../../types'\n\nexport default (state, action) => {\n    switch (action.type) {\n        case MOSTRAR_ALERTA:\n            return {\n                alerta: action.payload\n            }\n        case OCULTAR_ALERTA:\n            return {\n                alerta: null\n            }\n        default:\n            return state\n    }\n}","export const MOSTRAR_ALERTA = 'MOSTRAR_ALERTA'\nexport const OCULTAR_ALERTA = 'OCULTAR_ALERTA'\n\nexport const REGISTRO_EXITOSO = 'REGISTRO_EXITOSO'\nexport const REGISTRO_ERROR = 'REGISTRO_ERROR'\nexport const OBTENER_USUARIO = 'OBTENER_USUARIO'\nexport const LOGIN_EXITOSO = 'LOGIN_EXITOSO'\nexport const LOGIN_ERROR = 'LOGIN_ERROR'\nexport const CERRAR_SESION = 'CERRAR_SESION'\n\nexport const OBTENER_TURNOS = 'OBTENER_TURNOS'\nexport const AGREGAR_TURNO = 'AGREGAR_TURNO'\nexport const ELIMINAR_TURNO = 'ELIMINAR_TURNO'\nexport const OBTENER_TURNOS_X_FECHA = 'OBTENER_TURNOS_X_FECHA'\nexport const CAMBIAR_HORARIO_X_DIA = 'CAMBIAR_HORARIO_X_DIA'\n","import React, { useReducer } from 'react'\nimport alertaContext from './alertaContext'\nimport alertaReducer from './alertaReducer'\nimport { MOSTRAR_ALERTA, OCULTAR_ALERTA } from '../../types'\n\nconst AlertaState = props => {\n    const initialState = {\n        alerta: null\n    }\n\n    const [state, dispatch] =useReducer(alertaReducer, initialState)\n\n    const mostrarAlerta = (msg, categoria) => {\n        dispatch({\n            type: MOSTRAR_ALERTA,\n            payload: {\n                msg,\n                categoria\n            }\n        })\n\n        setTimeout(() => {\n            dispatch({\n                type: OCULTAR_ALERTA\n            })\n        }, 5000)\n    }\n\n    return (\n        <alertaContext.Provider\n            value={{\n                alerta:state.alerta,\n                mostrarAlerta\n            }}\n        >\n            {props.children}\n        </alertaContext.Provider>\n    )\n\n}\n\nexport default AlertaState","import {\n    REGISTRO_EXITOSO,\n    REGISTRO_ERROR,\n    OBTENER_USUARIO,\n    LOGIN_EXITOSO,\n    LOGIN_ERROR,\n    CERRAR_SESION\n} from '../../types'\n\nexport default (state, action) => {\n    switch (action.type) {\n        case REGISTRO_EXITOSO:\n            localStorage.setItem('token', action.payload.token)\n            return {\n                ...state,\n                autenticado: true,\n                mensaje: null\n            }\n        case LOGIN_EXITOSO:\n            localStorage.setItem('token', action.payload.token)\n            return {\n                ...state,\n                token: action.payload.token,\n                autenticado: true,\n                mensaje: null,\n                cargando: false\n            }\n        case OBTENER_USUARIO:\n            return {\n                ...state,\n                autenticado: true,\n                usuario: action.payload,\n                cargando: false\n            }\n        case REGISTRO_ERROR:\n        case LOGIN_ERROR:\n        case CERRAR_SESION:\n            localStorage.removeItem('token')\n            return {\n                ...state,\n                token: null,\n                mensaje: action.payload,\n                autenticado: null,\n                usuario: null,\n                cargando: false\n            }\n        default:\n            return state\n    }\n}","import React, { useReducer } from 'react'\nimport clienteAxios from '../../config/axios'\nimport AuthContext from './authContext'\nimport AuthReducer from './authReducer'\nimport tokenAuth from '../../config/token'\nimport {\n    REGISTRO_EXITOSO,\n    REGISTRO_ERROR,\n    OBTENER_USUARIO,\n    LOGIN_EXITOSO,\n    LOGIN_ERROR,\n    CERRAR_SESION\n} from '../../types'\n\nconst AuthState = props => {\n    const initialState = {\n        token: localStorage.getItem('token'),\n        autenticado: null,\n        usuario: null,\n        mensaje: null,\n        cargando: true\n    }\n\n    const [state, dispatch] = useReducer(AuthReducer, initialState)\n\n    // Las funciones\n    const registrarUsuario = async datos => {\n        try {\n            const respuesta = await clienteAxios.post('/api/usuarios', datos)\n            dispatch({\n                type: REGISTRO_EXITOSO,\n                payload: respuesta.data\n            })\n            // Obtener el usuario\n            usuarioAutenticado()\n        } catch (error) {\n            // console.log(error.response.data.msg)\n            const alerta = {\n                msg: error.response.data.msg,\n                categoria: 'alert-danger'\n            }\n            dispatch({\n                type: REGISTRO_ERROR,\n                payload: alerta\n            })\n        }\n    }\n\n    // Retorna el usuario autenticado\n    const usuarioAutenticado = async () => {\n        const token = localStorage.getItem('token')\n        // funcion para enviar el token por header\n        if (token) {\n            tokenAuth(token)\n        }\n\n        try {\n            const respuesta = await clienteAxios.get('/api/auth')\n            dispatch({\n                type: OBTENER_USUARIO,\n                payload: respuesta.data\n            })\n        } catch (error) {\n            // console.log(error.response.data.msg)\n            dispatch({\n                type: LOGIN_ERROR\n            })\n        }\n    }\n\n    // Cuando el usuario inicia sesión\n    const iniciarSesion = async datos => {\n        try {\n            const respuesta = await clienteAxios.post('/api/auth', datos)\n            dispatch({\n                type: LOGIN_EXITOSO,\n                payload: respuesta.data\n            })\n            // Obtener el usuario\n            usuarioAutenticado()\n        } catch (error) {\n            console.log(error.response.data.msg)\n            const alerta = {\n                msg: error.response.data.msg,\n                categoria: 'alert-danger'\n            }\n            dispatch({\n                type: LOGIN_ERROR,\n                payload: alerta\n            })\n        }\n    }\n\n    // Cierra la sesión del usuario\n    const cerrarSesion = () => {\n        dispatch({\n            type: CERRAR_SESION\n        })\n    }\n\n    return (\n        <AuthContext.Provider\n            value={{\n                token: state.token,\n                autenticado: state.autenticado,\n                usuario: state.usuario,\n                mensaje: state.mensaje,\n                cargando: state.cargando,\n                registrarUsuario,\n                iniciarSesion,\n                usuarioAutenticado,\n                cerrarSesion\n            }}\n        >\n            {props.children}\n        </AuthContext.Provider>\n    )\n}\n\nexport default AuthState","import { OBTENER_TURNOS, AGREGAR_TURNO, ELIMINAR_TURNO, OBTENER_TURNOS_X_FECHA, CAMBIAR_HORARIO_X_DIA } from '../../types'\nimport moment from 'moment'\n\nexport default (state, action) => {\n    switch (action.type) {\n        case OBTENER_TURNOS:\n            return {\n                ...state,\n                turnos: action.payload,\n                turnosParaHoy: action.payload.filter(t => t.fecha === moment(new Date()).format('DD-MM-YYYY')),\n                turnosResto: action.payload.filter(t => t.fecha !== moment(new Date()).format('DD-MM-YYYY'))\n            }\n        case AGREGAR_TURNO:\n            return {\n                ...state,\n                turnos: [...state.turnos, action.payload]\n            }\n        case ELIMINAR_TURNO:\n            return {\n                ...state,\n                turnos: state.turnos.filter( turno => turno._id !== action.payload),\n                turnosParaHoy: state.turnosParaHoy.filter( tp => tp._id !== action.payload),\n                turnosResto: state.turnosResto.filter( tr => tr._id !== action.payload)\n            }\n        case OBTENER_TURNOS_X_FECHA:\n            return {\n                ...state,\n                turnosDisponibles: state.horarioDeAtencion.filter(t => action.payload.indexOf(t) === -1),\n                cargandoTurnos: false\n            }\n        case CAMBIAR_HORARIO_X_DIA:\n            if (action.payload === 2 || action.payload === 5) { //martes y viernes\n                return {\n                    ...state,\n                    horarioDeAtencion: ['09:00', '10:00', '11:00','12:00', '13:00']\n                }\n            } else if (action.payload === 4 || action.payload === 6) { //jueves y sabados\n                return {\n                    ...state,\n                    horarioDeAtencion: ['16:00', '17:00', '18:00', '19:00', '20:00']\n                }\n            } else /*if (action.payload === 3)*/ { //miercoles\n                return {\n                    ...state,\n                    horarioDeAtencion: ['13:00', '14:00', '15:00', '16:00', '17:00', '18:00']\n                }\n            }\n        default:\n            return state\n    }\n}","import React, { useReducer } from 'react'\nimport turnoContext from './turnoContext'\nimport turnoReducer from './turnoReducer'\nimport { OBTENER_TURNOS, AGREGAR_TURNO, ELIMINAR_TURNO, OBTENER_TURNOS_X_FECHA, CAMBIAR_HORARIO_X_DIA } from '../../types'\nimport clienteAxios from '../../config/axios'\n\nconst TurnoState = props => {\n\n    const initialState = {\n        turnos: [],\n        turnosDisponibles: [],\n        horarioDeAtencion: [],\n        turnosParaHoy: [],\n        turnosResto: [],\n        cargandoTurnos: true\n    }\n\n    // Dispatch para ejecutar las acciones\n    const [state, dispatch] = useReducer(turnoReducer, initialState)\n\n    // Funciones para el CRUD de Turnos\n    // getMisTurnos\n    const obtenerTurnos = async () => {\n        try {\n            const response = await clienteAxios.get('/api/turnos')\n            dispatch({\n                type: OBTENER_TURNOS,\n                payload: response.data\n            })\n        } catch (error) {\n            console.log(error)\n        }\n    }\n\n    // Obtener horasDisponibles por fecha\n    const obtenerHorasDisponibles = async fecha => {\n        try {\n            // Trae las horas ocupadas de la fecha\n            const respuesta = await clienteAxios.get(`api/turnos/fecha/${fecha}`)\n            const aux = []\n            await respuesta.data.map(t => aux.push(t.hora))\n            dispatch({\n                type: OBTENER_TURNOS_X_FECHA,\n                payload: aux\n            })\n        } catch (error) {\n            console.log(error)\n        }\n    }\n\n    // Agregar Turno\n    const agregarTurno = async turno => {\n        try {\n            const resultado = await clienteAxios.post('/api/turnos', turno)\n            // Insertar el turno en el state\n            dispatch({\n                type: AGREGAR_TURNO,\n                payload: resultado.data\n            })\n        } catch (error) {\n            console.log(error)\n        }\n    }\n\n    // Eliminar un Turno\n    const eliminarTurno = async turnoId => {\n        try {\n            await clienteAxios.delete(`/api/turnos/${turnoId}`)\n            dispatch({\n                type: ELIMINAR_TURNO,\n                payload: turnoId\n            })\n        } catch (error) {\n            console.log(error)\n        }\n    }\n\n    const cambiarHorarioAtencion = async dia => {\n        try {\n            dispatch({\n                type: CAMBIAR_HORARIO_X_DIA,\n                payload: dia\n            })\n        } catch (error) {\n            console.log(error)\n        }\n    }\n\n    return (\n        <turnoContext.Provider\n            value={{\n                turnos: state.turnos,\n                horarioDeAtencion: state.horarioDeAtencion,\n                turnosDisponibles: state.turnosDisponibles,\n                turnosParaHoy: state.turnosParaHoy,\n                turnosResto: state.turnosResto,\n                cargandoTurnos: state.cargandoTurnos,\n                obtenerTurnos,\n                agregarTurno,\n                eliminarTurno,\n                obtenerHorasDisponibles,\n                cambiarHorarioAtencion\n            }}\n        >\n            {props.children}\n        </turnoContext.Provider>\n    )\n}\n\nexport default TurnoState","import React, { useState, useContext, useEffect } from 'react'\nimport { Link } from 'react-router-dom'\nimport AlertaContext from '../../context/alertas/alertaContext'\nimport AuthContext from '../../context/autenticacion/authContext'\nimport Avatar from '@material-ui/core/Avatar';\nimport Button from '@material-ui/core/Button';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport TextField from '@material-ui/core/TextField';\n// import FormControlLabel from '@material-ui/core/FormControlLabel';\n// import Checkbox from '@material-ui/core/Checkbox';\n// import Link from '@material-ui/core/Link';\n// import Grid from '@material-ui/core/Grid';\nimport Box from '@material-ui/core/Box';\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Container from '@material-ui/core/Container';\nimport Alert from '@material-ui/lab/Alert';\n\nfunction Copyright() {\n    return (\n        <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\n            {'Copyright © '}\n            <Link color=\"inherit\" to=\"https://material-ui.com/\">\n                DY\n      </Link>{' '}\n            {new Date().getFullYear()}\n            {'.'}\n        </Typography>\n    );\n}\n\nconst useStyles = makeStyles((theme) => ({\n    paper: {\n        marginTop: theme.spacing(8),\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n    },\n    avatar: {\n        margin: theme.spacing(1),\n        backgroundColor: theme.palette.secondary.main,\n    },\n    form: {\n        width: '100%', // Fix IE 11 issue.\n        marginTop: theme.spacing(1),\n    },\n    submit: {\n        margin: theme.spacing(3, 0, 2),\n    },\n}));\n\nexport default function Login(props) {\n\n    // extraer los valores del context\n    const alertaContext = useContext(AlertaContext)\n    const { alerta, mostrarAlerta } = alertaContext\n\n    const authContext = useContext(AuthContext)\n    const { mensaje, autenticado, iniciarSesion } = authContext\n\n    // En caso de que  el usuario no exista o el password sea incorrecto\n    useEffect(() => {\n        if (autenticado) {\n            props.history.push('/home')\n        }\n\n        if (mensaje) {\n            mostrarAlerta(mensaje.msg, mensaje.categoria)\n        }\n        // eslint-disable-next-line\n    }, [mensaje, autenticado, props.history])\n\n    const [usuario, setUsuario] = useState({\n        email: '',\n        password: ''\n    })\n\n    const { email, password } = usuario\n\n    const onChange = e => {\n        setUsuario({\n            ...usuario,\n            [e.target.name]: e.target.value\n        })\n    }\n\n    const onSubmit = e => {\n        e.preventDefault()\n        // validar campos vacios\n        if (email.trim() === '' || password.trim() === '') {\n            mostrarAlerta('Todos los campos son obligatorios', 'alert-danger')\n        }\n\n        // Pasarlo al action\n        iniciarSesion({ email, password })\n    }\n\n    const classes = useStyles();\n\n    return (\n        <Container component=\"main\" maxWidth=\"xs\">\n            <CssBaseline />\n            <div className={classes.paper}>\n                <Avatar className={classes.avatar}>\n                    <LockOutlinedIcon />\n                </Avatar>\n                <Typography component=\"h1\" variant=\"h5\">\n                    Sign in\n        </Typography>\n                <form className={classes.form} noValidate onSubmit={onSubmit}>\n                    <TextField\n                        variant=\"outlined\"\n                        margin=\"normal\"\n                        required\n                        fullWidth\n                        id=\"email\"\n                        label=\"Email\"\n                        name=\"email\"\n                        autoComplete=\"email\"\n                        autoFocus\n                        value={email}\n                        onChange={onChange}\n                    />\n                    <TextField\n                        variant=\"outlined\"\n                        margin=\"normal\"\n                        required\n                        fullWidth\n                        name=\"password\"\n                        label=\"Password\"\n                        type=\"password\"\n                        id=\"password\"\n                        autoComplete=\"current-password\"\n                        value={password}\n                        onChange={onChange}\n                    />\n                    {/* <FormControlLabel\n                        control={<Checkbox value=\"remember\" color=\"primary\" />}\n                        label=\"Remember me\"\n                    /> */}\n                    <Button\n                        type=\"submit\"\n                        fullWidth\n                        variant=\"contained\"\n                        color=\"primary\"\n                        className={classes.submit}\n                    >\n                        Sign In\n          </Button>\n                    {/* <Grid container>\n                        <Grid item xs>\n                            <Link href=\"#\" variant=\"body2\">\n                                Forgot password?\n              </Link>\n                        </Grid>\n                        <Grid item>\n                            <Link href=\"#\" variant=\"body2\">\n                                {\"Don't have an account? Sign Up\"}\n                            </Link>\n                        </Grid>\n                    </Grid> */}\n                </form>\n                <Link to='/nueva-cuenta' >\n                    Crear Cuenta\n                </Link>\n                {alerta && <Alert severity='error'>{alerta.msg}</Alert>}\n            </div>\n            <Box mt={8}>\n                <Copyright />\n            </Box>\n        </Container>\n    );\n}","import React, { Component } from 'react';\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\n// import './App.css';\nimport Home from './components/Home'\nimport NuevaCuenta from './components/auth/NuevaCuenta';\nimport tokenAuth from './config/token'\nimport RutaPrivada from './components/rutas/RutaPrivada'\nimport Turnero from './components/Turnero';\nimport AlertaState from './context/alertas/alertaState'\nimport AuthState from './context/autenticacion/authState'\nimport TurnoState from './context/turnos/turnoState'\nimport Login from './components/auth/Login'\n\n// Revisar si tenemos un token\nconst token = localStorage.getItem('token')\n\nif (token) {\n  tokenAuth(token)\n}\n\nclass App extends Component {\n\n  render() {\n    return (\n      <AlertaState>\n        <AuthState>\n          <TurnoState>\n            <Router>\n              <Switch>\n                <Route path='/' exact component={Login} />\n                <Route path='/nueva-cuenta' exact component={NuevaCuenta} />\n                <RutaPrivada path='/home' exact component={Home} />\n                <RutaPrivada path='/turnero' exact component={Turnero} />\n              </Switch>\n            </Router>\n          </TurnoState>\n        </AuthState>\n      </AlertaState>\n    );\n  }\n\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n// import './index.css';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}